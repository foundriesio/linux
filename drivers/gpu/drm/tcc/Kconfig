config DRM_TCC
	tristate "DRM Support for Telechips SoC Series"
	depends on OF && DRM && ARCH_TCC
	select DRM_KMS_HELPER
	select VIDEOMODE_HELPERS
	help
	  Choose this option if you have a Telechips SoC chipset.
	  If M is selected the module will be called tccdrm.

if DRM_TCC

comment "CRTCs"

config DRM_TCC_LCD
	bool "LCD"
	select DRM_TCC_DPI
	help
	  Choose this option if you want to use LCD/LVDS I/F for DRM.

config DRM_TCC_VIC_MAX
  int "Maximum Video Identification Code supported by TCC DRM"
  default 1025

config DRM_TCC_LCD_VIC
	int "Video Identification Code for LCD"
  depends on DRM_TCC_LCD
  default 1024
  range 1 DRM_TCC_VIC_MAX
	help
	  Video Identification Code for First-Display

config DRM_TCC_KEEP_LOGO
        bool "DRM TCC KEEP LOGO"
        default n
        depends on DRM_TCC_LCD
        help
          If this config is selected to y, DRM driver skips process that fills its plane with block color when it is binded.

config DRM_TCC_EXT
        bool "TCC Extended LCD type"
        depends on DRM_TCC_LCD
        help
          Choose this option if you want to use Extended LCD for DRM.

config DRM_TCC_EXT_VIC
	int "Video Identification Code for EXT"
  depends on DRM_TCC_EXT
  default 1024
  range 1 DRM_TCC_VIC_MAX
	help
	  Video Identification Code for Ext-Display

config DRM_TCC_THIRD
        bool "TCC third display type"
        depends on DRM_TCC_EXT
        help
          Choose this option if you want to use third display for DRM.

config DRM_TCC_THIRD_VIC
	int "Video Identification Code for THIRD"
  depends on DRM_TCC_THIRD
  default 1025
  range 1 DRM_TCC_VIC_MAX
	help
	  Video Identification Code for Third-Display

config DRM_TCC_VIDI
	bool "Virtual Display"
	select DRM_TCC_DPI
	help
	  Choose this option if you want to use TCC VIDI for DRM.

config DRM_TCC_CRTC_TO_BE_ALWAYS_ALIVE
	bool "All crtcs will be always alive"
	depends on DRM_TCC_LCD || DRM_TCC_EXT || DRM_TCC_THIRD
	help
		Display Device on VIOC requiress at least one activated RDMA
		Otherwise, Display Device becomes unstable status.
		You should set CONFIG_DRM_TCC_CRTC_TO_BE_ALWAYS_ALIVE to prevent
		Display Device becomes unstable status if there is no other solution.
		- It will be deprecated.

comment "Encoders and Bridges"

config DRM_TCC_DPI
	bool "Parallel output"
	select DRM_PANEL
	help
	  This enables support for TCC parallel output.

endif

#
# Debugging messages
#
menuconfig DRM_DRV_DEBUG
        bool "DRM Debugging messages (DEVELOPMENT)"
        depends on DRM_TCC
        help
          Choose this option if you want to use debugging messages (DEVELOPMENT).
          You can choice various debugging messages.
          Kernel debugging level is 'KERN_DEBUG <7>'. (use "dmesg -n 8")

if DRM_DRV_DEBUG

config DRM_UT_CORE
        bool "DRM core messages"
        help
          Choose this option if you want to enable DRM core debugging messages.
          Kernel debugging level is 'KERN_DEBUG <7>'. (use "dmesg -n 8")

config DRM_UT_DRIVER
        bool "DRM driver messages"
        help
          Choose this option if you want to enable DRM driver debugging messages.
          Kernel debugging level is 'KERN_DEBUG <7>'. (use "dmesg -n 8")

config DRM_UT_KMS
        bool "DRM KMS messages"
        help
          Choose this option if you want to enable DRM KMS debugging messages.
          Kernel debugging level is 'KERN_DEBUG <7>'. (use "dmesg -n 8")

config DRM_UT_PRIME
        bool "DRM PRIME messages"
        help
          Choose this option if you want to enable DRM PRIME debugging messages.
          Kernel debugging level is 'KERN_DEBUG <7>'. (use "dmesg -n 8")

endif

