/****************************************************************************
 *
 * Copyright (C) 2018 Telechips Inc.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 ****************************************************************************/

#ifndef _TCC_SDR_HW_H_
#define _TCC_SDR_HW_H_


#define TRUE \
	((bool) true)
#define FALSE \
	((bool) false)

#define TCC_AUDIO_ARRAY_SIZE(a) \
	(uint32_t)(sizeof(a) / sizeof((a)[0]))

#ifndef VAL2FLD
	#define VAL2FLD(field, value) \
	(((value) << field ## _Pos) & field ## _Msk)
#endif

#ifndef FLD2VAL
	#define FLD2VAL(field, value) \
		(((value) & field ## _Msk) >> field ## _Pos)
#endif

#define TCC_DAI_MAX_FREQ \
	(100000000)
#define TCC_DAI_DP_LINK_MAX_FREQ \
	(400000000)
#define TCC_DAI_FILTER_MAX_FREQ \
	(300000000)
#define TCC_CDIF_FILTER_MAX_FREQY \
	(300000000)
#define TCC_SPDIF_MAX_FREQ \
	(100000000)

#define TCC_AUDIO_ADMA_OFFSET \
	(0x0000)
#define TCC_AUDIO_GIRQ_OFFSET \
	(0x0080)
#define TCC_AUDIO_DAI_OFFSET \
	(0x1000)
#define TCC_AUDIO_CDIF_OFFSET \
	(0x1080)
#define TCC_AUDIO_SPDIF_OFFSET \
	(0x2000)
#define TCC_AUDIO_PORTCFG_OFFSET \
	(0x3000)

/******  ADMA Register Offset Information(Audio Base + offset) ******/
#define TCC_ADMA_RXDADAR_OFFSET \
	(0x0000)
#define TCC_ADMA_RXDAPARAM_OFFSET \
	(0x0004)
#define TCC_ADMA_RXDATCNT_OFFSET \
	(0x0008)
#define TCC_ADMA_RXDACDAR_OFFSET \
	(0x000C)
#define TCC_ADMA_RXCDDAR_OFFSET \
	(0x0010)
#define TCC_ADMA_RXCDPARAM_OFFSET \
	(0x0014)
#define TCC_ADMA_RXCDTCNT_OFFSET \
	(0x0018)
#define TCC_ADMA_RXCDCDAR_OFFSET \
	(0x001C)
#define TCC_ADMA_RXDADARL_OFFSET \
	(0x0028)
#define TCC_ADMA_RXDACDARL_OFFSET \
	(0x002C)
#define TCC_ADMA_RXCDDARL_OFFSET \
	(0x0030)
#define TCC_ADMA_RXCDCDARL_OFFSET \
	(0x0034)
#define TCC_ADMA_TRANSCTRL_OFFSET \
	(0x0038)
#define TCC_ADMA_RPTCTRL_OFFSET \
	(0x003C)
#define TCC_ADMA_TXDASAR_OFFSET	\
	(0x0040)
#define TCC_ADMA_TXDAPARAM_OFFSET \
	(0x0044)
#define TCC_ADMA_TXDATCNT_OFFSET \
	(0x0048)
#define TCC_ADMA_TXDACSAR_OFFSET \
	(0x004C)
#define TCC_ADMA_TXSPSAR_OFFSET \
	(0x0050)
#define TCC_ADMA_TXSPPARAM_OFFSET \
	(0x0054)
#define TCC_ADMA_TXSPTCNT_OFFSET \
	(0x0058)
#define TCC_ADMA_TXSPCSAR_OFFSET \
	(0x005C)
#define TCC_ADMA_TXDASARL_OFFSET \
	(0x0068)
#define TCC_ADMA_TXDACSARL_OFFSET \
	(0x006C)
#define TCC_ADMA_TXSPSARL_OFFSET \
	(0x0070)
#define TCC_ADMA_TXSPCSARL_OFFSET \
	(0x0074)
#define TCC_ADMA_CHCTRL_OFFSET \
	(0x0078)
#define TCC_ADMA_INTSTATUS_OFFSET \
	(0x007C)
#define TCC_ADMA_GINTREQ_OFFSET \
	(0x0080)
#define TCC_ADMA_GINTSTATUS_OFFSET \
	(0x0084)
#if defined(CONFIG_ARCH_TCC803X) || defined(CONFIG_ARCH_TCC805X) || \
	defined(CONFIG_ARCH_TCC806X) || defined(CONFIG_ARCH_TCC899X) || \
	defined(CONFIG_ARCH_TCC901X)
#define TCC_ADMA_TXDAADRCNT_OFFSET \
	(0x0088)
#define TCC_ADMA_RXDAADRCNT_OFFSET \
	(0x008C)
#define TCC_ADMA_TXSPADRCNT_OFFSET \
	(0x0090)
#define TCC_ADMA_RXSPADRCNT_OFFSET \
	(0x0094)
#endif

#define TCC_ADMA_RXDADAR1_OFFSET \
	(0x0100)
#define TCC_ADMA_RXDADAR2_OFFSET \
	(0x0104)
#define TCC_ADMA_RXDADAR3_OFFSET \
	(0x0108)
#define TCC_ADMA_RXDACAR1_OFFSET \
	(0x010C)
#define TCC_ADMA_RXDACAR2_OFFSET \
	(0x0110)
#define TCC_ADMA_RXDACAR3_OFFSET \
	(0x0114)
#define TCC_ADMA_RXDADARL1_OFFSET \
	(0x0118)
#define TCC_ADMA_RXDADARL2_OFFSET \
	(0x011C)
#define TCC_ADMA_RXDADARL3_OFFSET \
	(0x0120)
#define TCC_ADMA_RXDACARL1_OFFSET \
	(0x0124)
#define TCC_ADMA_RXDACARL2_OFFSET \
	(0x0128)
#define TCC_ADMA_RXDACARL3_OFFSET \
	(0x012C)
#define TCC_ADMA_TXDASAR1_OFFSET \
	(0x0130)
#define TCC_ADMA_TXDASAR2_OFFSET \
	(0x0134)
#define TCC_ADMA_TXDASAR3_OFFSET \
	(0x0138)
#define TCC_ADMA_TXDACSAR1_OFFSET \
	(0x013C)
#define TCC_ADMA_TXDACSAR2_OFFSET \
	(0x0140)
#define TCC_ADMA_TXDACSAR3_OFFSET \
	(0x0144)
#define TCC_ADMA_TXDADARL1_OFFSET \
	(0x0148)
#define TCC_ADMA_TXDADARL2_OFFSET \
	(0x014C)
#define TCC_ADMA_TXDADARL3_OFFSET \
	(0x0150)
#define TCC_ADMA_TXDACARL1_OFFSET \
	(0x0154)
#define TCC_ADMA_TXDACARL2_OFFSET \
	(0x0158)
#define TCC_ADMA_TXDACARL3_OFFSET \
	(0x015C)

#if defined(CONFIG_ARCH_TCC898X) || defined(CONFIG_ARCH_TCC899X) || \
	defined(CONFIG_ARCH_TCC901X)
#define TCC_ADMA_TXDASAR4_OFFSET \
	(0x0160)
#define TCC_ADMA_TXDACAR4_OFFSET \
	(0x0164)
#define TCC_ADMA_TXDADARL4_OFFSET \
	(0x0168)
#define TCC_ADMA_TXDACARL4_OFFSET \
	(0x016C)

#define TCC_ADMA_RXDADAR4_OFFSET \
	(0x0170)
#define TCC_ADMA_RXDACAR4_OFFSET \
	(0x0174)
#define TCC_ADMA_RXDADARL4_OFFSET \
	(0x0178)
#define TCC_ADMA_RXDACARL4_OFFSET \
	(0x017C)
#endif

#define TCC_ADMA_RESET_OFFSET \
	(0x0180)

/****** General Interrupt Register Offset ******/
/******   (Audio Base + 0x0080 + offset)  ******/
#define TCC_GINT_REQ_OFFSET \
	(0x0000)
#define TCC_GINT_STATUS_OFFSET \
	(0x0004)


/****** DAI Register Offset Information(Audio Base + 0x1000 + offset) ******/
#define TCC_DAI_DAMR_OFFSET \
	(0x0040)
#define TCC_DAI_DAVC_OFFSET \
	(0x0044)
#define TCC_DAI_MCCR0_OFFSET \
	(0x0048)
#define TCC_DAI_MCCR1_OFFSET \
	(0x004C)
#define TCC_DAI_DRMR_OFFSET \
	(0x0050)
#if defined(CONFIG_ARCH_TCC803X) || defined(CONFIG_ARCH_TCC805X) || \
	defined(CONFIG_ARCH_TCC806X) || defined(CONFIG_ARCH_TCC899X) || \
	defined(CONFIG_ARCH_TCC901X)
#define TCC_DAI_DCLKDIV_OFFSET \
	(0x0054)
#endif


/****** ADMA Tx/Rx Parameter, Offset:0x04, 0x14, 0x44, 0x54 ******/
#define ADMA_PARAM_ADDR_MASK_Pos \
	(8)
#define ADMA_PARAM_ADDR_MASK_Msk \
	(0xffffffU << ADMA_PARAM_ADDR_MASK_Pos)

#define ADMA_PARAM_ADDR_INCREMENT_Pos \
	(0)
#define ADMA_PARAM_ADDR_INCREMENT_Msk \
	(0xffU << ADMA_PARAM_ADDR_INCREMENT_Pos)

/****** ADMA Tx/Rx Counter, Offset:0x08, 0x18, 0x48, 0x58 ******/
#define ADMA_COUNTER_CUR_COUNT_Pos \
	(16)
#define ADMA_COUNTER_CUR_COUNT_Msk \
	(0xffffffffU << ADMA_COUNTER_CUR_COUNT_Pos)

#define ADMA_COUNTER_START_COUNT_Pos \
	(0)
#define ADMA_COUNTER_START_COUNT_Msk \
	(0xffffffffU << ADMA_COUNTER_START_COUNT_Pos)

/****** ADMA Tx/Rx Address Counter, Offset:0x88, 0x8C, 0x90, 0x94 ******/
#if defined(CONFIG_ARCH_TCC803X) || defined(CONFIG_ARCH_TCC805X) || \
	defined(CONFIG_ARCH_TCC806X) || defined(CONFIG_ARCH_TCC899X) || \
	defined(CONFIG_ARCH_TCC901X)
#define ADMA_ADRCNT_MODE_Pos \
	(31)
#define ADMA_ADRCNT_MODE_Msk \
	((uint32_t)1U << ADMA_ADRCNT_MODE_Pos)
#define ADMA_ADRCNT_MODE_SMASK \
	((uint32_t)0U << ADMA_ADRCNT_MODE_Pos)
#define ADMA_ADRCNT_MODE_ADRCNT \
	((uint32_t)1U << ADMA_ADRCNT_MODE_Pos)

#define ADMA_ADRCNT_ADDR_COUNT_Pos \
	(0)
#define ADMA_ADRCNT_ADDR_COUNT_Msk \
	(0x7fffffffU << ADMA_ADRCNT_ADDR_COUNT_Pos)
#endif

/****** ADMA Transfer Control, Offset:0x38 ******/
#define ADMA_TRANSCTRL_DAI_TX_DMA_WSIZE_Pos \
	(0U)
#define ADMA_TRANSCTRL_DAI_TX_DMA_WSIZE_Msk \
	((uint32_t)3U << ADMA_TRANSCTRL_DAI_TX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_WSIZE_8 \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_TX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_WSIZE_16 \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_TX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_WSIZE_32 \
	((uint32_t)3U << ADMA_TRANSCTRL_DAI_TX_DMA_WSIZE_Pos)

#define ADMA_TRANSCTRL_SPDIF_TX_DMA_WSIZE_Pos \
	(2)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_WSIZE_Msk \
	((uint32_t)3U << ADMA_TRANSCTRL_SPDIF_TX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_WSIZE_8 \
	((uint32_t)0U << ADMA_TRANSCTRL_SPDIF_TX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_WSIZE_16 \
	((uint32_t)1U << ADMA_TRANSCTRL_SPDIF_TX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_WSIZE_32 \
	((uint32_t)3U << ADMA_TRANSCTRL_SPDIF_TX_DMA_WSIZE_Pos)

#define ADMA_TRANSCTRL_DAI_RX_DMA_WSIZE_Pos \
	(4)
#define ADMA_TRANSCTRL_DAI_RX_DMA_WSIZE_Msk \
	((uint32_t)3U << ADMA_TRANSCTRL_DAI_RX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_WSIZE_8 \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_RX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_WSIZE_16 \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_RX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_WSIZE_32\
	((uint32_t)3U << ADMA_TRANSCTRL_DAI_RX_DMA_WSIZE_Pos)

#define ADMA_TRANSCTRL_CDIF_RX_DMA_WSIZE_Pos \
	(6)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_WSIZE_Msk \
	((uint32_t)3U << ADMA_TRANSCTRL_CDIF_RX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_WSIZE_8 \
	((uint32_t)0U << ADMA_TRANSCTRL_CDIF_RX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_WSIZE_16 \
	((uint32_t)1U << ADMA_TRANSCTRL_CDIF_RX_DMA_WSIZE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_WSIZE_32 \
	((uint32_t)3U << ADMA_TRANSCTRL_CDIF_RX_DMA_WSIZE_Pos)

#define ADMA_TRANSCTRL_DAI_TX_DMA_BURST_SIZE_Pos \
	(8)
#define ADMA_TRANSCTRL_DAI_TX_DMA_BURST_SIZE_Msk \
((uint32_t)3U << ADMA_TRANSCTRL_DAI_TX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_BURST_CYCLE_1 \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_TX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_BURST_CYCLE_2 \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_TX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_BURST_CYCLE_4 \
	((uint32_t)2U << ADMA_TRANSCTRL_DAI_TX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_BURST_CYCLE_8 \
	((uint32_t)3U << ADMA_TRANSCTRL_DAI_TX_DMA_BURST_SIZE_Pos)

#define ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_SIZE_Pos \
	(10)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_SIZE_Msk \
	((uint32_t)3U << ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_CYCLE_1 \
	((uint32_t)0U << ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_CYCLE_2 \
	((uint32_t)1U << ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_CYCLE_4 \
	((uint32_t)2U << ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_CYCLE_8 \
	((uint32_t)3U << ADMA_TRANSCTRL_SPDIF_TX_DMA_BURST_SIZE_Pos)

#define ADMA_TRANSCTRL_DAI_RX_DMA_BURST_SIZE_Pos \
	(12)
#define ADMA_TRANSCTRL_DAI_RX_DMA_BURST_SIZE_Msk \
	((uint32_t)3U << ADMA_TRANSCTRL_DAI_RX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_BURST_CYCLE_1 \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_RX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_BURST_CYCLE_2 \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_RX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_BURST_CYCLE_4 \
	((uint32_t)2U << ADMA_TRANSCTRL_DAI_RX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_BURST_CYCLE_8 \
	((uint32_t)3U << ADMA_TRANSCTRL_DAI_RX_DMA_BURST_SIZE_Pos)

#define ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_SIZE_Pos \
	(14)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_SIZE_Msk \
	((uint32_t)3U << ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_CYCLE_1 \
	((uint32_t)0U << ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_CYCLE_2 \
	((uint32_t)1U << ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_CYCLE_4 \
	((uint32_t)2U << ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_SIZE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_CYCLE_8 \
	((uint32_t)3U << ADMA_TRANSCTRL_CDIF_RX_DMA_BURST_SIZE_Pos)

#define ADMA_TRANSCTRL_DAI_TX_DMA_REPEAT_MODE_Pos \
	(16)
#define ADMA_TRANSCTRL_DAI_TX_DMA_REPEAT_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_TX_DMA_REPEAT_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_REPEAT_DISABLE \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_TX_DMA_REPEAT_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_REPEAT_ENABLE \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_TX_DMA_REPEAT_MODE_Pos)

#define ADMA_TRANSCTRL_SPDIF_TX_DMA_REPEAT_MODE_Pos \
	(17)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_REPEAT_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_SPDIF_TX_DMA_REPEAT_MODE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_REPEAT_DISABLE \
	((uint32_t)0U << ADMA_TRANSCTRL_SPDIF_TX_DMA_REPEAT_MODE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_REPEAT_ENABLE \
	((uint32_t)1U << ADMA_TRANSCTRL_SPDIF_TX_DMA_REPEAT_MODE_Pos)

#define ADMA_TRANSCTRL_DAI_RX_DMA_REPEAT_MODE_Pos \
	(18)
#define ADMA_TRANSCTRL_DAI_RX_DMA_REPEAT_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_RX_DMA_REPEAT_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_REPEAT_DISABLE \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_RX_DMA_REPEAT_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_REPEAT_ENABLE \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_RX_DMA_REPEAT_MODE_Pos)

#define ADMA_TRANSCTRL_CDIF_RX_DMA_REPEAT_MODE_Pos \
	(19)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_REPEAT_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_CDIF_RX_DMA_REPEAT_MODE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_REPEAT_DISABLE \
	((uint32_t)0U << ADMA_TRANSCTRL_CDIF_RX_DMA_REPEAT_MODE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_REPEAT_ENABLE \
	((uint32_t)1U << ADMA_TRANSCTRL_CDIF_RX_DMA_REPEAT_MODE_Pos)

#define ADMA_TRANSCTRL_DAI_TX_DMA_TRIGGER_MODE_Pos \
	(20)
#define ADMA_TRANSCTRL_DAI_TX_DMA_TRIGGER_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_TX_DMA_TRIGGER_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_TRIGGER_EDGE \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_TX_DMA_TRIGGER_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_TRIGGER_LEVEL \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_TX_DMA_TRIGGER_MODE_Pos)

#define ADMA_TRANSCTRL_SPDIF_TX_DMA_TRIGGER_MODE_Pos \
	(21)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_TRIGGER_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_SPDIF_TX_DMA_TRIGGER_MODE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_TRIGGER_EDGE \
	((uint32_t)0U << ADMA_TRANSCTRL_SPDIF_TX_DMA_TRIGGER_MODE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_TRIGGER_LEVEL \
	((uint32_t)1U << ADMA_TRANSCTRL_SPDIF_TX_DMA_TRIGGER_MODE_Pos)

#define ADMA_TRANSCTRL_DAI_RX_DMA_TRIGGER_MODE_Pos \
	(22)
#define ADMA_TRANSCTRL_DAI_RX_DMA_TRIGGER_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_RX_DMA_TRIGGER_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_TRIGGER_EDGE \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_RX_DMA_TRIGGER_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_TRIGGER_LEVEL \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_RX_DMA_TRIGGER_MODE_Pos)

#define ADMA_TRANSCTRL_CDIF_RX_DMA_TRIGGER_MODE_Pos \
	(23)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_TRIGGER_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_CDIF_RX_DMA_TRIGGER_MODE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_TRIGGER_EDGE	\
	((uint32_t)0U << ADMA_TRANSCTRL_CDIF_RX_DMA_TRIGGER_MODE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_TRIGGER_LEVEL \
	((uint32_t)1U << ADMA_TRANSCTRL_CDIF_RX_DMA_TRIGGER_MODE_Pos)

#define ADMA_TRANSCTRL_DAI_TX_DMA_AHB_LOCK_MODE_Pos \
	(24)
#define ADMA_TRANSCTRL_DAI_TX_DMA_AHB_LOCK_MODE_Msk\
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_TX_DMA_AHB_LOCK_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_AHB_LOCK_DISABLE \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_TX_DMA_AHB_LOCK_MODE_Pos)
#define ADMA_TRANSCTRL_DAI_TX_DMA_AHB_LOCK_ENABLE \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_TX_DMA_AHB_LOCK_MODE_Pos)

#define ADMA_TRANSCTRL_SPDIF_TX_DMA_AHB_LOCK_MODE_Pos \
	(25)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_AHB_LOCK_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_SPDIF_TX_DMA__MODE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_AHB_LOCK_DISABLE \
	((uint32_t)0U << ADMA_TRANSCTRL_SPDIF_TX_DMA__MODE_Pos)
#define ADMA_TRANSCTRL_SPDIF_TX_DMA_AHB_LOCK_ENABLE	 \
	((uint32_t)1U << ADMA_TRANSCTRL_SPDIF_TX_DMA__MODE_Pos)

#define ADMA_TRANSCTRL_DAI_RX_DMA_AHB_LOCK_MODE_Pos \
	(26)
#define ADMA_TRANSCTRL_DAI_RX_DMA_AHB_LOCK_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_RX_DMA__MODE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_AHB_LOCK_DISABLE \
	((uint32_t)0U << ADMA_TRANSCTRL_DAI_RX_DMA__MODE_Pos)
#define ADMA_TRANSCTRL_DAI_RX_DMA_AHB_LOCK_ENABLE \
	((uint32_t)1U << ADMA_TRANSCTRL_DAI_RX_DMA__MODE_Pos)

#define ADMA_TRANSCTRL_CDIF_RX_DMA_AHB_LOCK_MODE_Pos \
	(27)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_AHB_LOCK_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_CDIF_RX_DMA__MODE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_AHB_LOCK_DISABLE \
	((uint32_t)0U << ADMA_TRANSCTRL_CDIF_RX_DMA__MODE_Pos)
#define ADMA_TRANSCTRL_CDIF_RX_DMA_AHB_LOCK_ENABLE \
	((uint32_t)1U << ADMA_TRANSCTRL_CDIF_RX_DMA__MODE_Pos)

#define ADMA_TRANSCTRL_TX_DMA_CONTINUOUS_MODE_Pos \
	(28)
#define ADMA_TRANSCTRL_TX_DMA_CONTINUOUS_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_TX_DMA_CONTINUOUS_MODE_Pos)
#define ADMA_TRANSCTRL_TX_DMA_CONTINUOUS_START_ADDR \
	((uint32_t)0U << ADMA_TRANSCTRL_TX_DMA_CONTINUOUS_MODE_Pos)
#define ADMA_TRANSCTRL_TX_DMA_CONTINUOUS_CUR_ADDR \
	((uint32_t)1U << ADMA_TRANSCTRL_TX_DMA_CONTINUOUS_MODE_Pos)

#define ADMA_TRANSCTRL_RX_DMA_CONTINUOUS_MODE_Pos \
	(29)
#define ADMA_TRANSCTRL_RX_DMA_CONTINUOUS_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_RX_DMA_CONTINUOUS_MODE_Pos)
#define ADMA_TRANSCTRL_RX_DMA_CONTINUOUS_START_ADDR \
	((uint32_t)0U << ADMA_TRANSCTRL_RX_DMA_CONTINUOUS_MODE_Pos)
#define ADMA_TRANSCTRL_RX_DMA_CONTINUOUS_CUR_ADDR \
	((uint32_t)1U << ADMA_TRANSCTRL_RX_DMA_CONTINUOUS_MODE_Pos)

#define ADMA_TRANSCTRL_HOP_COUNT_MODE_Pos \
	(30)
#define ADMA_TRANSCTRL_HOP_COUNT_MODE_Msk \
	((uint32_t)1U << ADMA_TRANSCTRL_HOP_COUNT_MODE_Pos)
#define ADMA_TRANSCTRL_HOP_COUNT_INCR_MODE \
	((uint32_t)0U << ADMA_TRANSCTRL_HOP_COUNT_MODE_Pos)
#define ADMA_TRANSCTRL_HOP_COUNT_CLEAR_MODE \
	((uint32_t)1U << ADMA_TRANSCTRL_HOP_COUNT_MODE_Pos)

/****** ADMA Repeat Control, Offset:0x3C ******/
#define ADMA_RPTCTRL_RPTCNT_Pos \
	(0)
#define ADMA_RPTCTRL_RPTCNT_Msk \
	(0xffffffffffffU << ADMA_RPTCTRL_RPTCNT_Pos)
#define ADMA_RPTCTRL_RPTCNT_INFINITE \
	((uint32_t)0U << ADMA_RPTCTRL_RPTCNT_Pos)

#define ADMA_RPTCTRL_DAI_BUF_THRESHOLD_Pos \
	(24)
#define ADMA_RPTCTRL_DAI_BUF_THRESHOLD_Msk \
	((uint32_t)15 << ADMA_RPTCTRL_DAI_BUF_THRESHOLD_Pos)

#define ADMA_RPTCTRL_IRQ_MODE_Pos \
	(31)
#define ADMA_RPTCTRL_IRQ_MODE_Msk \
	((uint32_t)1U << ADMA_RPTCTRL_IRQ_MODE_Pos)
#define ADMA_RPTCTRL_IRQ_END_REPEAT \
	((uint32_t)1U << ADMA_RPTCTRL_IRQ_MODE_Pos)
#define ADMA_RPTCTRL_IRQ_REQUEST_DMA \
	((uint32_t)0U << ADMA_RPTCTRL_IRQ_MODE_Pos)

/****** ADMA Channel Control, Offset:0x78 ******/
#define ADMA_CHCTRL_DAI_TX_IRQ_MODE_Pos \
	(0)
#define ADMA_CHCTRL_DAI_TX_IRQ_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_IRQ_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_IRQ_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_TX_IRQ_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_IRQ_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_IRQ_MODE_Pos)

#define ADMA_CHCTRL_SPDIF_TX_IRQ_MODE_Pos \
	(1)
#define ADMA_CHCTRL_SPDIF_TX_IRQ_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_IRQ_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_IRQ_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_SPDIF_TX_IRQ_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_IRQ_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_IRQ_MODE_Pos)

#define ADMA_CHCTRL_DAI_RX_IRQ_MODE_Pos \
	(2)
#define ADMA_CHCTRL_DAI_RX_IRQ_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_IRQ_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_IRQ_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_RX_IRQ_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_IRQ_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_IRQ_MODE_Pos)

#define ADMA_CHCTRL_CDIF_RX_IRQ_MODE_Pos \
	(3)
#define ADMA_CHCTRL_CDIF_RX_IRQ_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_IRQ_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RX_IRQ_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_CDIF_RX_IRQ_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RX_IRQ_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_IRQ_MODE_Pos)

#define ADMA_CHCTRL_DAI_TX_SWAP_TYPE_Pos \
	(4)
#define ADMA_CHCTRL_DAI_TX_SWAP_TYPE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_SWAP_TYPE_Pos)
#define ADMA_CHCTRL_DAI_TX_SWAP_HALF_WORD \
	((uint32_t)0U << ADMA_CHCTRL_DAI_TX_SWAP_TYPE_Pos)
#define ADMA_CHCTRL_DAI_TX_SWAP_BYTE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_SWAP_TYPE_Pos)

#define ADMA_CHCTRL_SPDIF_TX_SWAP_TYPE_Pos \
	(5)
#define ADMA_CHCTRL_SPDIF_TX_SWAP_TYPE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_SWAP_TYPE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_SWAP_HALF_WORD	\
	((uint32_t)0U << ADMA_CHCTRL_SPDIF_TX_SWAP_TYPE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_SWAP_BYTE \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_SWAP_TYPE_Pos)

#define ADMA_CHCTRL_DAI_RX_SWAP_TYPE_Pos \
	(6)
#define ADMA_CHCTRL_DAI_RX_SWAP_TYPE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_SWAP_TYPE_Pos)
#define ADMA_CHCTRL_DAI_RX_SWAP_HALF_WORD \
	((uint32_t)0U << ADMA_CHCTRL_DAI_RX_SWAP_TYPE_Pos)
#define ADMA_CHCTRL_DAI_RX_SWAP_BYTE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_SWAP_TYPE_Pos)

#define ADMA_CHCTRL_CDIF_RX_SWAP_TYPE_Pos \
	(7)
#define ADMA_CHCTRL_CDIF_RX_SWAP_TYPE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_SWAP_TYPE_Pos)
#define ADMA_CHCTRL_CDIF_RX_SWAP_HALF_WORD \
	((uint32_t)0U << ADMA_CHCTRL_CDIF_RX_SWAP_TYPE_Pos)
#define ADMA_CHCTRL_CDIF_RX_SWAP_BYTE \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_SWAP_TYPE_Pos)

#define ADMA_CHCTRL_DAI_TX_SWAP_MODE_Pos \
	(8)
#define ADMA_CHCTRL_DAI_TX_SWAP_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_SWAP_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_SWAP_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_TX_SWAP_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_SWAP_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_SWAP_MODE_Pos)

#define ADMA_CHCTRL_SPDIF_TX_SWAP_MODE_Pos \
	(9)
#define ADMA_CHCTRL_SPDIF_TX_SWAP_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_SWAP_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_SWAP_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_SPDIF_TX_SWAP_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_SWAP_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_SWAP_MODE_Pos)

#define ADMA_CHCTRL_DAI_RX_SWAP_MODE_Pos \
	(10)
#define ADMA_CHCTRL_DAI_RX_SWAP_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_SWAP_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_SWAP_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_RX_SWAP_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_SWAP_ENABLE\
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_SWAP_MODE_Pos)

#define ADMA_CHCTRL_CDIF_RX_SWAP_MODE_Pos \
	(11)
#define ADMA_CHCTRL_CDIF_RX_SWAP_MODE_Msk\
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_SWAP_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RX_SWAP_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_CDIF_RX_SWAP_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RX_SWAP_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_SWAP_MODE_Pos)

#define ADMA_CHCTRL_DAI_TXD_WIDTH_MODE_Pos \
	(12)
#define ADMA_CHCTRL_DAI_TXD_WIDTH_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TXD_WIDTH_MODE_Pos)
#define ADMA_CHCTRL_DAI_TXD_WIDTH_24BIT \
	((uint32_t)0U << ADMA_CHCTRL_DAI_TXD_WIDTH_MODE_Pos)
#define ADMA_CHCTRL_DAI_TXD_WIDTH_16BIT \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TXD_WIDTH_MODE_Pos)

#define ADMA_CHCTRL_SPDIF_TXD_WIDTH_MODE_Pos \
	(13)
#define ADMA_CHCTRL_SPDIF_TXD_WIDTH_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TXD_WIDTH_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TXD_WIDTH_24BIT \
	((uint32_t)0U << ADMA_CHCTRL_SPDIF_TXD_WIDTH_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TXD_WIDTH_16BIT \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TXD_WIDTH_MODE_Pos)

#define ADMA_CHCTRL_DAI_RXD_WIDTH_MODE_Pos \
	(14)
#define ADMA_CHCTRL_DAI_RXD_WIDTH_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RXD_WIDTH_MODE_Pos)
#define ADMA_CHCTRL_DAI_RXD_WIDTH_24BIT \
	((uint32_t)0U << ADMA_CHCTRL_DAI_RXD_WIDTH_MODE_Pos)
#define ADMA_CHCTRL_DAI_RXD_WIDTH_16BIT \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RXD_WIDTH_MODE_Pos)

#define ADMA_CHCTRL_CDIF_RXD_WIDTH_MODE_Pos \
	(15)
#define ADMA_CHCTRL_CDIF_RXD_WIDTH_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RXD_WIDTH_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RXD_WIDTH_24BIT \
	((uint32_t)0U << ADMA_CHCTRL_CDIF_RXD_WIDTH_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RXD_WIDTH_16BIT \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RXD_WIDTH_MODE_Pos)

#define ADMA_CHCTRL_DAI_TX_LR_MODE_Pos \
	(16)
#define ADMA_CHCTRL_DAI_TX_LR_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_LR_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_LR_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_TX_LR_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_LR_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_LR_MODE_Pos)

#define ADMA_CHCTRL_SPDIF_TX_LR_MODE_Pos \
	(17)
#define ADMA_CHCTRL_SPDIF_TX_LR_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_LR_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_LR_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_SPDIF_TX_LR_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_LR_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_LR_MODE_Pos)

#define ADMA_CHCTRL_DAI_RX_LR_MODE_Pos \
	(18)
#define ADMA_CHCTRL_DAI_RX_LR_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_LR_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_LR_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_RX_LR_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_LR_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_LR_MODE_Pos)

#define ADMA_CHCTRL_CDIF_RX_LR_MODE_Pos \
	(19)
#define ADMA_CHCTRL_CDIF_RX_LR_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_LR_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RX_LR_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_CDIF_RX_LR_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RX_LR_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_LR_MODE_Pos)

#define ADMA_CHCTRL_TX_MULTI_CH_SEL_Pos \
	(20)
#define ADMA_CHCTRL_TX_MULTI_CH_SEL_Msk \
	((uint32_t)3U << ADMA_CHCTRL_TX_MULTI_CH_SEL_Pos)
#define ADMA_CHCTRL_TX_MULTI_CH_3_1 \
	((uint32_t)0U << ADMA_CHCTRL_TX_MULTI_CH_SEL_Pos)
#define ADMA_CHCTRL_TX_MULTI_CH_5_1_012 \
	((uint32_t)1U << ADMA_CHCTRL_TX_MULTI_CH_SEL_Pos)
#define ADMA_CHCTRL_TX_MULTI_CH_5_1_013 \
	((uint32_t)2U << ADMA_CHCTRL_TX_MULTI_CH_SEL_Pos)
#define ADMA_CHCTRL_TX_MULTI_CH_7_1 \
	((uint32_t)3U << ADMA_CHCTRL_TX_MULTI_CH_SEL_Pos)

#define ADMA_CHCTRL_RX_MULTI_CH_SEL_Pos \
	(22)
#define ADMA_CHCTRL_RX_MULTI_CH_SEL_Msk \
	((uint32_t)3U << ADMA_CHCTRL_RX_MULTI_CH_SEL_Pos)
#define ADMA_CHCTRL_RX_MULTI_CH_3_1 \
	((uint32_t)0U << ADMA_CHCTRL_RX_MULTI_CH_SEL_Pos)
#define ADMA_CHCTRL_RX_MULTI_CH_5_1_012 \
	((uint32_t)1U << ADMA_CHCTRL_RX_MULTI_CH_SEL_Pos)
#define ADMA_CHCTRL_RX_MULTI_CH_5_1_013 \
	((uint32_t)2U << ADMA_CHCTRL_RX_MULTI_CH_SEL_Pos)
#define ADMA_CHCTRL_RX_MULTI_CH_7_1 \
	((uint32_t)3U << ADMA_CHCTRL_RX_MULTI_CH_SEL_Pos)


#define ADMA_CHCTRL_DAI_TX_MULTI_CH_MODE_Pos \
	(24)
#define ADMA_CHCTRL_DAI_TX_MULTI_CH_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_MULTI_CH_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_MULTI_CH_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_TX_MULTI_CH_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_MULTI_CH_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_MULTI_CH_MODE_Pos)

#define ADMA_CHCTRL_DAI_RX_MULTI_CH_MODE_Pos \
	(25)
#define ADMA_CHCTRL_DAI_RX_MULTI_CH_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_MULTI_CH_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_MULTI_CH_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_RX_MULTI_CH_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_MULTI_CH_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_MULTI_CH_MODE_Pos)

#define ADMA_CHCTRL_CDIF_SPDIF_SEL_Pos \
	(26)
#define ADMA_CHCTRL_CDIF_SPDIF_SEL_Msk \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_SPDIF_SEL_Pos)
#define ADMA_CHCTRL_CDIF_SPDIF_SEL_CDIF \
	((uint32_t)0U << ADMA_CHCTRL_CDIF_SPDIF_SEL_Pos)
#define ADMA_CHCTRL_CDIF_SPDIF_SEL_SPDIF \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_SPDIF_SEL_Pos)

#define ADMA_CHCTRL_DAI_SPDIF_SAME_CLOCK_MODE_Pos \
	(27)
#define ADMA_CHCTRL_DAI_SPDIF_SAME_CLOCK_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_SPDIF_SAME_CLOCK_MODE_Pos)
#define ADMA_CHCTRL_DAI_SPDIF_SAME_CLOCK_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_SPDIF_SAME_CLOCK_MODE_Pos)
#define ADMA_CHCTRL_DAI_SPDIF_SAME_CLOCK_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_SPDIF_SAME_CLOCK_MODE_Pos)

#define ADMA_CHCTRL_DAI_TX_DMA_MODE_Pos \
	(28)
#define ADMA_CHCTRL_DAI_TX_DMA_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_DMA_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_DMA_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_TX_DMA_MODE_Pos)
#define ADMA_CHCTRL_DAI_TX_DMA_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_TX_DMA_MODE_Pos)

#define ADMA_CHCTRL_SPDIF_TX_DMA_MODE_Pos \
	(29)
#define ADMA_CHCTRL_SPDIF_TX_DMA_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_DMA_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_DMA_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_SPDIF_TX_DMA_MODE_Pos)
#define ADMA_CHCTRL_SPDIF_TX_DMA_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_SPDIF_TX_DMA_MODE_Pos)

#define ADMA_CHCTRL_DAI_RX_DMA_MODE_Pos	 \
	(30)
#define ADMA_CHCTRL_DAI_RX_DMA_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_DMA_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_DMA_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_DAI_RX_DMA_MODE_Pos)
#define ADMA_CHCTRL_DAI_RX_DMA_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_DAI_RX_DMA_MODE_Pos)

#define ADMA_CHCTRL_CDIF_RX_DMA_MODE_Pos \
	(31)
#define ADMA_CHCTRL_CDIF_RX_DMA_MODE_Msk \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_DMA_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RX_DMA_DISABLE \
	((uint32_t)0U << ADMA_CHCTRL_CDIF_RX_DMA_MODE_Pos)
#define ADMA_CHCTRL_CDIF_RX_DMA_ENABLE \
	((uint32_t)1U << ADMA_CHCTRL_CDIF_RX_DMA_MODE_Pos)

/****** ADMA Interrupt Status, Offset:0x7C ******/
#define ADMA_ISTAT_DAI_TX_MASKED_Pos \
	(0)
#define ADMA_ISTAT_DAI_TX_MASKED_Msk \
	((uint32_t)1U << ADMA_ISTAT_DAI_TX_MASKED_Pos)
#define ADMA_ISTAT_DAI_TX_MASKED_NOT_OCCURED \
	((uint32_t)0U << ADMA_ISTAT_DAI_TX_MASKED_Pos)
#define ADMA_ISTAT_DAI_TX_MASKED_OCCURED \
	((uint32_t)1U << ADMA_ISTAT_DAI_TX_MASKED_Pos)

#define ADMA_ISTAT_SPDIF_TX_MASKED_Pos \
	(1)
#define ADMA_ISTAT_SPDIF_TX_MASKED_Msk \
	((uint32_t)1U << ADMA_ISTAT_SPDIF_TX_MASKED_Pos)
#define ADMA_ISTAT_SPDIF_TX_MASKED_NOT_OCCURED \
	((uint32_t)0U << ADMA_ISTAT_SPDIF_TX_MASKED_Pos)
#define ADMA_ISTAT_SPDIF_TX_MASKED_OCCURED \
	((uint32_t)1U << ADMA_ISTAT_SPDIF_TX_MASKED_Pos)

#define ADMA_ISTAT_DAI_RX_MASKED_Pos \
	(2)
#define ADMA_ISTAT_DAI_RX_MASKED_Msk \
	((uint32_t)1U << ADMA_ISTAT_DAI_RX_MASKED_Pos)
#define ADMA_ISTAT_DAI_RX_MASKED_NOT_OCCURED \
	((uint32_t)0U << ADMA_ISTAT_DAI_RX_MASKED_Pos)
#define ADMA_ISTAT_DAI_RX_MASKED_OCCURED \
	((uint32_t)1U << ADMA_ISTAT_DAI_RX_MASKED_Pos)

#define ADMA_ISTAT_CDIF_RX_MASKED_Pos \
	(3)
#define ADMA_ISTAT_CDIF_RX_MASKED_Msk \
	((uint32_t)1U << ADMA_ISTAT_CDIF_RX_MASKED_Pos)
#define ADMA_ISTAT_CDIF_RX_MASKED_NOT_OCCURED \
	((uint32_t)0U << ADMA_ISTAT_CDIF_RX_MASKED_Pos)
#define ADMA_ISTAT_CDIF_RX_MASKED_OCCURED \
	((uint32_t)1U << ADMA_ISTAT_CDIF_RX_MASKED_Pos)

#define ADMA_ISTAT_DAI_TX_Pos \
	(4)
#define ADMA_ISTAT_DAI_TX_Msk \
	((uint32_t)1U << ADMA_ISTAT_DAI_TX_Pos)
#define ADMA_ISTAT_DAI_TX_NOT_OCCURED \
	((uint32_t)0U << ADMA_ISTAT_DAI_TX_Pos)
#define ADMA_ISTAT_DAI_TX_OCCURED \
	((uint32_t)1U << ADMA_ISTAT_DAI_TX_Pos)

#define ADMA_ISTAT_SPDIF_TX_Pos \
	(5)
#define ADMA_ISTAT_SPDIF_TX_Msk \
	((uint32_t)1U << ADMA_ISTAT_SPDIF_TX_Pos)
#define ADMA_ISTAT_SPDIF_TX_NOT_OCCURED \
	((uint32_t)0U << ADMA_ISTAT_SPDIF_TX_Pos)
#define ADMA_ISTAT_SPDIF_TX_OCCURED \
	((uint32_t)1U << ADMA_ISTAT_SPDIF_TX_Pos)

#define ADMA_ISTAT_DAI_RX_Pos \
	(6)
#define ADMA_ISTAT_DAI_RX_Msk \
	((uint32_t)1U << ADMA_ISTAT_DAI_RX_Pos)
#define ADMA_ISTAT_DAI_RX_NOT_OCCURED \
	((uint32_t)0U << ADMA_ISTAT_DAI_RX_Pos)
#define ADMA_ISTAT_DAI_RX_OCCURED \
	((uint32_t)1U << ADMA_ISTAT_DAI_RX_Pos)

#define ADMA_ISTAT_CDIF_RX_Pos \
	(7)
#define ADMA_ISTAT_CDIF_RX_Msk \
	((uint32_t)1U << ADMA_ISTAT_CDIF_RX_Pos)
#define ADMA_ISTAT_CDIF_RX_NOT_OCCURED \
	((uint32_t)0U << ADMA_ISTAT_CDIF_RX_Pos)
#define ADMA_ISTAT_CDIF_RX_OCCURED \
	((uint32_t)1U << ADMA_ISTAT_CDIF_RX_Pos)

/****** General Interrupt Enable Register, Offset:0x80 ******/
#define ADMA_GINT_CDIF_RX_Pos \
	(0)
#define ADMA_GINT_CDIF_RX_Msk \
	((uint32_t)1U << ADMA_GINT_CDIF_RX_Pos)
#define ADMA_GINT_DAI_RX_Pos \
	(1)
#define ADMA_GINT_DAI_RX_Msk \
	((uint32_t)1U << ADMA_GINT_DAI_RX_Pos)
#define ADMA_GINT_DAI_TX_Pos \
	(2)
#define ADMA_GINT_DAI_TX_Msk \
	((uint32_t)1U << ADMA_GINT_DAI_TX_Pos)

/****** ADMA DMA Reset, Offset:0x180 ******/
#define ADMA_RESET_DMA_TX_Pos \
	(0)
#define ADMA_RESET_DMA_TX_Msk \
	((uint32_t)1U << ADMA_RESET_DMA_TX_Pos)
#define ADMA_RESET_DMA_TX_RESET \
	((uint32_t)1U << ADMA_RESET_DMA_TX_Pos)
#define ADMA_RESET_DMA_TX_RELEASE \
	((uint32_t)0U << ADMA_RESET_DMA_TX_Pos)

#define ADMA_RESET_DMA_RX_Pos \
	(1)
#define ADMA_RESET_DMA_RX_Msk \
	((uint32_t)1U << ADMA_RESET_DMA_RX_Pos)
#define ADMA_RESET_DMA_RX_RESET \
	((uint32_t)1U << ADMA_RESET_DMA_RX_Pos)
#define ADMA_RESET_DMA_RX_RELEASE \
	((uint32_t)0U << ADMA_RESET_DMA_RX_Pos)

#if defined(CONFIG_ARCH_TCC803X) || defined(CONFIG_ARCH_TCC805X) || \
	defined(CONFIG_ARCH_TCC806X) || defined(CONFIG_ARCH_TCC899X) || \
	defined(CONFIG_ARCH_TCC901X)
#define ADMA_RESET_DMA_DAI_TX_Pos \
	(2)
#define ADMA_RESET_DMA_DAI_TX_Msk \
	((uint32_t)1U << ADMA_RESET_DMA_DAI_TX_Pos)
#define ADMA_RESET_DMA_DAI_TX_RESET \
	((uint32_t)1U << ADMA_RESET_DMA_DAI_TX_Pos)
#define ADMA_RESET_DMA_DAI_TX_RELEASE \
	((uint32_t)0U << ADMA_RESET_DMA_DAI_TX_Pos)

#define ADMA_RESET_DMA_DAI_RX_Pos			(3)
#define ADMA_RESET_DMA_DAI_RX_Msk \
	((uint32_t)1U << ADMA_RESET_DMA_DAI_RX_Pos)
#define ADMA_RESET_DMA_DAI_RX_RESET \
	((uint32_t)1U << ADMA_RESET_DMA_DAI_RX_Pos)
#define ADMA_RESET_DMA_DAI_RX_RELEASE \
	((uint32_t)0U << ADMA_RESET_DMA_DAI_RX_Pos)

#define ADMA_RESET_DMA_SPDIF_TX_Pos			(4)
#define ADMA_RESET_DMA_SPDIF_TX_Msk \
	((uint32_t)1U << ADMA_RESET_DMA_SPDIF_TX_Pos)
#define ADMA_RESET_DMA_SPDIF_TX_RESET \
	((uint32_t)1U << ADMA_RESET_DMA_SPDIF_TX_Pos)
#define ADMA_RESET_DMA_SPDIF_TX_RELEASE\
	((uint32_t)0U << ADMA_RESET_DMA_SPDIF_TX_Pos)

#define ADMA_RESET_DMA_SPDIF_RX_Pos			(5)
#define ADMA_RESET_DMA_SPDIF_RX_Msk \
	((uint32_t)1U << ADMA_RESET_DMA_SPDIF_RX_Pos)
#define ADMA_RESET_DMA_SPDIF_RX_RESET \
	((uint32_t)1U << ADMA_RESET_DMA_SPDIF_RX_Pos)
#define ADMA_RESET_DMA_SPDIF_RX_RELEASE \
	((uint32_t)0U << ADMA_RESET_DMA_SPDIF_RX_Pos)
#endif

/****** DAI Digital Audio Mode Register (DAMR), Offset:0x1000 ******/
#define DAMR_DAI_RX2TX_LOOPBACK_Pos \
	(0)
#define DAMR_DAI_RX2TX_LOOPBACK_Msk \
	((uint32_t)1U << DAMR_DAI_RX2TX_LOOPBACK_Pos)
#define DAMR_DAI_RX2TX_LOOPBACK_DISABLE \
	((uint32_t)0U << DAMR_DAI_RX2TX_LOOPBACK_Pos)
#define DAMR_DAI_RX2TX_LOOPBACK_ENABLE \
	((uint32_t)1U << DAMR_DAI_RX2TX_LOOPBACK_Pos)

#define DAMR_DAI_MONITOR_MODE_Pos \
	(1)
#define DAMR_DAI_MONITOR_MODE_Msk \
	((uint32_t)1U << DAMR_DAI_MONITOR_MODE_Pos)
#define DAMR_DAI_MONITOR_DISABLE \
	((uint32_t)0U << DAMR_DAI_MONITOR_MODE_Pos)
#define DAMR_DAI_MONITOR_ENABLE \
	((uint32_t)1U << DAMR_DAI_MONITOR_MODE_Pos)

#define DAMR_CDIF_MONITOR_MODE_Pos \
	(2)
#define DAMR_CDIF_MONITOR_MODE_Msk\
	((uint32_t)1U << DAMR_CDIF_MONITOR_MODE_Pos)
#define DAMR_CDIF_MONITOR_DISABLE \
	((uint32_t)0U << DAMR_CDIF_MONITOR_MODE_Pos)
#define DAMR_CDIF_MONITOR_ENABLE \
	((uint32_t)1U << DAMR_CDIF_MONITOR_MODE_Pos)

#define DAMR_DAI_BIT_CLK_POLARITY_Pos \
	(3)
#define DAMR_DAI_BIT_CLK_POLARITY_Msk \
	((uint32_t)1U << DAMR_DAI_BIT_CLK_POLARITY_Pos)
#define DAMR_DAI_BIT_CLK_POSITIVE \
	((uint32_t)0U << DAMR_DAI_BIT_CLK_POLARITY_Pos)
#define DAMR_DAI_BIT_CLK_NAGATIVE \
	((uint32_t)1U << DAMR_DAI_BIT_CLK_POLARITY_Pos)

#if defined(CONFIG_ARCH_TCC802X) || defined(CONFIG_ARCH_TCC898X)
#define DAMR_DAI_FRAME_CLK_DIV_Pos \
	(4)
#define DAMR_DAI_FRAME_CLK_DIV_Msk \
	((uint32_t)3U << DAMR_DAI_FRAME_CLK_DIV_Pos)
#define DAMR_DAI_FRAME_CLK_DIV_32 \
	((uint32_t)0U << DAMR_DAI_FRAME_CLK_DIV_Pos)	///< 32fs->fs
#define DAMR_DAI_FRAME_CLK_DIV_48 \
	((uint32_t)1U << DAMR_DAI_FRAME_CLK_DIV_Pos)	///< 48fs->fs
#define DAMR_DAI_FRAME_CLK_DIV_64 \
	((uint32_t)2U << DAMR_DAI_FRAME_CLK_DIV_Pos)	///< 64fs->fs
#define DAMR_DAI_FRAME_CLK_DIV_X \
	((uint32_t)3U << DAMR_DAI_FRAME_CLK_DIV_Pos)	///< xfs->fs

#define DAMR_DAI_BIT_CLK_DIV_Pos \
	(6)
#define DAMR_DAI_BIT_CLK_DIV_Msk \
	((uint32_t)3U << DAMR_DAI_BIT_CLK_DIV_Pos)

///< 256fs->64fs
#define DAMR_DAI_BIT_CLK_DIV_4 \
	((uint32_t)0U << DAMR_DAI_BIT_CLK_DIV_Pos)
///< 384fs->64fs
#define DAMR_DAI_BIT_CLK_DIV_6 \
	((uint32_t)1U << DAMR_DAI_BIT_CLK_DIV_Pos)
///< 512fs->64fs, 384fs->48fs, 256fs->32fs
#define DAMR_DAI_BIT_CLK_DIV_8 \
	((uint32_t)2U << DAMR_DAI_BIT_CLK_DIV_Pos)
///< 1024fs->64fs, 512fs->32fs
#define DAMR_DAI_BIT_CLK_DIV_16 \
	((uint32_t)3U << DAMR_DAI_BIT_CLK_DIV_Pos)
#endif

#if defined(CONFIG_ARCH_TCC805X) || defined(CONFIG_ARCH_TCC806X)
#define DAMR_AUDIO_DATA_FILTER_MODE_Pos \
	(7)
#define DAMR_AUDIO_DATA_FILTER_MODE_Msk \
	((uint32_t)1U << DAMR_AUDIO_DATA_FILTER_MODE_Pos)
#define DAMR_AUDIO_DATA_FILTER_DISABLE \
	((uint32_t)0U << DAMR_AUDIO_DATA_FILTER_MODE_Pos)
#define DAMR_AUDIO_DATA_FILTER_ENABLE \
	((uint32_t)1U << DAMR_AUDIO_DATA_FILTER_MODE_Pos)
#endif

#define DAMR_CDIF_CLK_MASTER_Pos \
	(8)
#define DAMR_CDIF_CLK_MASTER_Msk \
	((uint32_t)1U << DAMR_CDIF_CLK_MASTER_Pos)
#define DAMR_CDIF_CLK_MASTER_DISABLE \
	((uint32_t)0U << DAMR_CDIF_CLK_MASTER_Pos)
#define DAMR_CDIF_CLK_MASTER_ENABLE \
	((uint32_t)1U << DAMR_CDIF_CLK_MASTER_Pos)

#define DAMR_DAI_FRAME_CLK_MASTER_Pos \
	(9)
#define DAMR_DAI_FRAME_CLK_MASTER_Msk \
	((uint32_t)1U << DAMR_DAI_FRAME_CLK_MASTER_Pos)
#define DAMR_DAI_FRAME_CLK_MASTER_EXT \
	((uint32_t)0U << DAMR_DAI_FRAME_CLK_MASTER_Pos)
#define DAMR_DAI_FRAME_CLK_MASTER_SYS \
	((uint32_t)1U << DAMR_DAI_FRAME_CLK_MASTER_Pos)

#define DAMR_DAI_BIT_CLK_MASTER_Pos \
	(10)
#define DAMR_DAI_BIT_CLK_MASTER_Msk \
	((uint32_t)1U << DAMR_DAI_BIT_CLK_MASTER_Pos)
#define DAMR_DAI_BIT_CLK_MASTER_EXT \
	((uint32_t)0U << DAMR_DAI_BIT_CLK_MASTER_Pos)
#define DAMR_DAI_BIT_CLK_MASTER_SYS \
	((uint32_t)1U << DAMR_DAI_BIT_CLK_MASTER_Pos)

#define DAMR_DAI_SYS_CLK_MASTER_Pos \
	(11)
#define DAMR_DAI_SYS_CLK_MASTER_Msk \
	((uint32_t)1U << DAMR_DAI_SYS_CLK_MASTER_Pos)
#define DAMR_DAI_SYS_CLK_MASTER_EXT \
	((uint32_t)0U << DAMR_DAI_SYS_CLK_MASTER_Pos)
#define DAMR_DAI_SYS_CLK_MASTER_SYS \
	((uint32_t)1U << DAMR_DAI_SYS_CLK_MASTER_Pos)

#define DAMR_DAI_SYNC_MODE_Pos \
	(12)
#define DAMR_DAI_SYNC_MODE_Msk \
	((uint32_t)1U << DAMR_DAI_SYNC_MODE_Pos)
#define DAMR_DAI_SYNC_IIS_DSP_TDM \
	((uint32_t)0U << DAMR_DAI_SYNC_MODE_Pos)
#define DAMR_DAI_SYNC_LR_JUSTIFIED \
	((uint32_t)1U << DAMR_DAI_SYNC_MODE_Pos)

#define DAMR_DAI_RECEIVER_MODE_Pos \
	(13)
#define DAMR_DAI_RECEIVER_MODE_Msk \
	((uint32_t)1U << DAMR_DAI_RECEIVER_MODE_Pos)
#define DAMR_DAI_RECEIVER_DISABLE \
	((uint32_t)0U << DAMR_DAI_RECEIVER_MODE_Pos)
#define DAMR_DAI_RECEIVER_ENABLE \
	((uint32_t)1U << DAMR_DAI_RECEIVER_MODE_Pos)

#define DAMR_DAI_TRANSMITTER_MODE_Pos \
	(14)
#define DAMR_DAI_TRANSMITTER_MODE_Msk \
	((uint32_t)1U << DAMR_DAI_TRANSMITTER_MODE_Pos)
#define DAMR_DAI_TRANSMITTER_DISABLE \
	((uint32_t)0U << DAMR_DAI_TRANSMITTER_MODE_Pos)
#define DAMR_DAI_TRANSMITTER_ENABLE \
	((uint32_t)1U << DAMR_DAI_TRANSMITTER_MODE_Pos)

#define DAMR_DAI_ENABLE_MODE_Pos \
	(15)
#define DAMR_DAI_ENABLE_MODE_Msk \
	((uint32_t)1U << DAMR_DAI_ENABLE_MODE_Pos)
#define DAMR_DAI_DISABLE \
	((uint32_t)0U << DAMR_DAI_ENABLE_MODE_Pos)
#define DAMR_DAI_ENABLE \
	((uint32_t)1U << DAMR_DAI_ENABLE_MODE_Pos)

#define DAMR_DAI_POLARITY_MODE_Pos \
	(16)
#define DAMR_DAI_POLARITY_MODE_Msk \
	((uint32_t)1U << DAMR_DAI_POLARITY_MODE_Pos)
#define DAMR_DAI_POLARITY_NEGATIVE \
	((uint32_t)0U << DAMR_DAI_POLARITY_MODE_Pos)
#define DAMR_DAI_POLARITY_POSITIVE \
	((uint32_t)1U << DAMR_DAI_POLARITY_MODE_Pos)

#define DAMR_DAI_TX2RX_LOOPBACK_Pos \
	(17)
#define DAMR_DAI_TX2RX_LOOPBACK_Msk \
	((uint32_t)1U << DAMR_DAI_TX2RX_LOOPBACK_Pos)
#define DAMR_DAI_TX2RX_LOOPBACK_DISABLE \
	((uint32_t)0U << DAMR_DAI_TX2RX_LOOPBACK_Pos)
#define DAMR_DAI_TX2RX_LOOPBACK_ENABLE \
	((uint32_t)1U << DAMR_DAI_TX2RX_LOOPBACK_Pos)

#define DAMR_DAI_TX_SHIFT_Pos \
	(18)
#define DAMR_DAI_TX_SHIFT_Msk \
	((uint32_t)3U << DAMR_DAI_TX_SHIFT_Pos)
#define DAMR_DAI_TX_SHIFT_MSB_24 \
	((uint32_t)0U << DAMR_DAI_TX_SHIFT_Pos)
#define DAMR_DAI_TX_SHIFT_MSB_16 \
	((uint32_t)1U << DAMR_DAI_TX_SHIFT_Pos)
#define DAMR_DAI_TX_SHIFT_LSB_24 \
	((uint32_t)2U << DAMR_DAI_TX_SHIFT_Pos)
#define DAMR_DAI_TX_SHIFT_LSB_16 \
	((uint32_t)3U << DAMR_DAI_TX_SHIFT_Pos)

#define DAMR_DAI_RX_SHIFT_Pos \
	(20)
#define DAMR_DAI_RX_SHIFT_Msk \
	((uint32_t)3U << DAMR_DAI_RX_SHIFT_Pos)
#define DAMR_DAI_RX_SHIFT_MSB_24 \
	((uint32_t)0U << DAMR_DAI_RX_SHIFT_Pos)
#define DAMR_DAI_RX_SHIFT_MSB_16 \
	((uint32_t)1U << DAMR_DAI_RX_SHIFT_Pos)
#define DAMR_DAI_RX_SHIFT_LSB_24 \
	((uint32_t)2U << DAMR_DAI_RX_SHIFT_Pos)
#define DAMR_DAI_RX_SHIFT_LSB_16 \
	((uint32_t)3U << DAMR_DAI_RX_SHIFT_Pos)

#define DAMR_DAI_RXD_SIGN_EXT_MODE_Pos \
	(22)
#define DAMR_DAI_RXD_SIGN_EXT_MODE_Msk \
	((uint32_t)1U << DAMR_DAI_RXD_SIGN_EXT_MODE_Pos)
#define DAMR_DAI_RXD_ZERO_EXT \
	((uint32_t)0U << DAMR_DAI_RXD_SIGN_EXT_MODE_Pos)
#define DAMR_DAI_RXD_SIGN_EXT \
	((uint32_t)1U << DAMR_DAI_RXD_SIGN_EXT_MODE_Pos)

#define DAMR_TX_JUSTIFIED_MODE_Pos \
	(23)
#define DAMR_TX_JUSTIFIED_MODE_Msk \
	((uint32_t)1U << DAMR_TX_JUSTIFIED_MODE_Pos)
#define DAMR_TX_JUSTIFIED_LEFT \
	((uint32_t)0U << DAMR_TX_JUSTIFIED_MODE_Pos)
#define DAMR_TX_JUSTIFIED_RIGHT \
	((uint32_t)1U << DAMR_TX_JUSTIFIED_MODE_Pos)

#define DAMR_RX_JUSTIFIED_MODE_Pos \
	(24)
#define DAMR_RX_JUSTIFIED_MODE_Msk \
	((uint32_t)1U << DAMR_RX_JUSTIFIED_MODE_Pos)
#define DAMR_RX_JUSTIFIED_LEFT \
	((uint32_t)0U << DAMR_RX_JUSTIFIED_MODE_Pos)
#define DAMR_RX_JUSTIFIED_RIGHT \
	((uint32_t)1U << DAMR_RX_JUSTIFIED_MODE_Pos)

#define DAMR_DSP_MODE_Pos \
	(25)
#define DAMR_DSP_MODE_Msk \
	((uint32_t)1U << DAMR_DSP_MODE_Pos)
#define DAMR_DSP_IIS_MODE \
	((uint32_t)0U << DAMR_DSP_MODE_Pos)
#define DAMR_DSP_OR_TDM_MODE \
	((uint32_t)1U << DAMR_DSP_MODE_Pos)

#define DAMR_DSP_WORD_LEN_Pos \
	(26)
#define DAMR_DSP_WORD_LEN_Msk \
	((uint32_t)1U << DAMR_DSP_WORD_LEN_Pos)
#define DAMR_DSP_WORD_LEN_16BIT \
	((uint32_t)1U << DAMR_DSP_WORD_LEN_Pos)
#define DAMR_DSP_WORD_LEN_24BIT	\
	((uint32_t)0U << DAMR_DSP_WORD_LEN_Pos)

#define DAMR_AUDIO_FILTER_MODE_Pos \
	(27)
#define DAMR_AUDIO_FILTER_MODE_Msk \
	((uint32_t)1U << DAMR_AUDIO_FILTER_MODE_Pos)
#define DAMR_AUDIO_FILTER_DISABLE \
	((uint32_t)0U << DAMR_AUDIO_FILTER_MODE_Pos)
#define DAMR_AUDIO_FILTER_ENABLE \
	((uint32_t)1U << DAMR_AUDIO_FILTER_MODE_Pos)

#define DAMR_MULTIPORT_MODE_Pos \
	(28)
#define DAMR_MULTIPORT_MODE_Msk \
	((uint32_t)1U << DAMR_MULTIPORT_MODE_Pos)
#define DAMR_MULTIPORT_DISABLE \
	((uint32_t)0U << DAMR_MULTIPORT_MODE_Pos)
#define DAMR_MULTIPORT_ENABLE \
	((uint32_t)1U << DAMR_MULTIPORT_MODE_Pos)

#define DAMR_DAI_BUF_THRESHOLD_MODE_Pos \
	(29)
#define DAMR_DAI_BUF_THRESHOLD_MODE_Msk \
	((uint32_t)1U << DAMR_DAI_BUF_THRESHOLD_MODE_Pos)
#define DAMR_DAI_BUF_THRESHOLD_DISABLE \
	((uint32_t)0U << DAMR_DAI_BUF_THRESHOLD_MODE_Pos)
#define DAMR_DAI_BUF_THRESHOLD_ENABLE \
	((uint32_t)1U << DAMR_DAI_BUF_THRESHOLD_MODE_Pos)

#define DAMR_LRCK_SRC_MODE_Pos \
	(30)
#define DAMR_LRCK_SRC_MODE_Msk \
	((uint32_t)1U << DAMR_LRCK_SRC_MODE_Pos)
#define DAMR_LRCK_SRC_LRCK_PAD \
	((uint32_t)0U << DAMR_LRCK_SRC_MODE_Pos)
#define DAMR_LRCK_SRC_DIRECT_MASTER \
	((uint32_t)1U << DAMR_LRCK_SRC_MODE_Pos)

#define DAMR_BCLK_SRC_MODE_Pos \
	(31)
#define DAMR_BCLK_SRC_MODE_Msk \
	((uint32_t)1U << DAMR_BCLK_SRC_MODE_Pos)
#define DAMR_BCLK_SRC_BCLK_PAD \
	((uint32_t)0U << DAMR_BCLK_SRC_MODE_Pos)
#define DAMR_BCLK_SRC_DIRECT_MASTER \
	((uint32_t)1U << DAMR_BCLK_SRC_MODE_Pos)

/****** DAI Digital Audio Volume Control Register (DAVC), Offset:0x1004 ******/
#define DAVC_DAI_TX_VOLUME_CONTROL_Pos \
	(0)
#define DAVC_DAI_TX_VOLUME_CONTROL_Msk \
	((uint32_t)31U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_0DB \
	((uint32_t)0U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_6DB \
	((uint32_t)1U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_12DB \
	((uint32_t)2U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_18DB \
	((uint32_t)3U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_24DB \
	((uint32_t)4U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_30DB \
	((uint32_t)5U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_36DB \
	((uint32_t)6U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_42DB \
	((uint32_t)7U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_48DB \
	((uint32_t)8U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_54DB \
	((uint32_t)9U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_60DB \
	((uint32_t)10U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_66DB \
	((uint32_t)11U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_72DB \
	((uint32_t)12U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_78DB \
	((uint32_t)13U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_84DB \
	((uint32_t)14U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_90DB \
	((uint32_t)15U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)
#define DAVC_DAI_TX_VOLUME_MINUS_96DB \
	((uint32_t)16U << DAVC_DAI_TX_VOLUME_CONTROL_Pos)

#define DAVC_DAI_RX_MUTE_CTRL_Pos \
	(16)
#define DAVC_DAI_RX_MUTE_CTRL_Msk \
	((uint32_t)1U << DAVC_DAI_RX_MUTE_CTRL_Pos)
#define DAVC_DAI_RX_MUTE_ENABLE \
	((uint32_t)1U << DAVC_DAI_RX_MUTE_CTRL_Pos)
#define DAVC_DAI_RX_MUTE_DISABLE \
	((uint32_t)0U << DAVC_DAI_RX_MUTE_CTRL_Pos)

/****** DAI Multi Channel Control Register0 (MCCR0), Offset:0x1048 ******/
#define MCCR0_FRAME_SIZE_Pos \
	(0)
#define MCCR0_FRAME_SIZE_Msk \
	(0x1FFU << MCCR0_FRAME_SIZE_Pos)

#define MCCR0_FRAME_INVERT_Pos \
	(9)
#define MCCR0_FRAME_INVERT_Msk \
	((uint32_t)1U << MCCR0_FRAME_INVERT_Pos)
#define MCCR0_FRAME_INVERT_DISABLE \
	((uint32_t)0U << MCCR0_FRAME_INVERT_Pos)
#define MCCR0_FRAME_INVERT_ENABLE \
	((uint32_t)1U << MCCR0_FRAME_INVERT_Pos)

#define MCCR0_FRAME_CLK_DIV_Pos \
	(10)
#define MCCR0_FRAME_CLK_DIV_Msk	 \
	((uint32_t)3U << MCCR0_FRAME_CLK_DIV_Pos)
///< 32fs->fs
#define MCCR0_FRAME_CLK_DIV_32 \
	((uint32_t)0U << MCCR0_FRAME_CLK_DIV_Pos)
///< 48fs->fs
#define MCCR0_FRAME_CLK_DIV_48 \
	((uint32_t)1U << MCCR0_FRAME_CLK_DIV_Pos)
///< 64fs->fs
#define MCCR0_FRAME_CLK_DIV_64 \
	((uint32_t)2U << MCCR0_FRAME_CLK_DIV_Pos)
///< xfs->fs
#define MCCR0_FRAME_CLK_DIV_USE \
	((uint32_t)3U << MCCR0_FRAME_CLK_DIV_Pos)

#define MCCR0_TDM_BIT_CLK_DIV_Pos \
	(12)
#define MCCR0_TDM_BIT_CLK_DIV_Msk \
	((uint32_t)3U << MCCR0_TDM_BIT_CLK_DIV_Pos)
///< disable
#define MCCR0_TDM_BIT_CLK_DIV_DISABLE \
	((uint32_t)0U << MCCR0_TDM_BIT_CLK_DIV_Pos)
///< 256fs->256fs
#define MCCR0_TDM_BIT_CLK_DIV_1 \
	((uint32_t)1U << MCCR0_TDM_BIT_CLK_DIV_Pos)
///< 512fs->256fs, 256fs->128fs
#define MCCR0_TDM_BIT_CLK_DIV_2 \
	((uint32_t)2U << MCCR0_TDM_BIT_CLK_DIV_Pos)

#define MCCR0_TDM_MODE_Pos \
	(14)
#define MCCR0_TDM_MODE_Msk \
	((uint32_t)3U << MCCR0_TDM_MODE_Pos)
#define MCCR0_TDM_MODE_0 \
	((uint32_t)0U << MCCR0_TDM_MODE_Pos)
#define MCCR0_TDM_MODE_1 \
	((uint32_t)1U << MCCR0_TDM_MODE_Pos)
#define MCCR0_TDM_MODE_2 \
	((uint32_t)2U << MCCR0_TDM_MODE_Pos)

#define MCCR0_FRAME_END_POSTION_Pos \
	(16)
#define MCCR0_FRAME_END_POSTION_Msk \
	((uint32_t)0x1FFU << MCCR0_FRAME_END_POSTION_Pos)

#if defined(CONFIG_ARCH_TCC802X) || defined(CONFIG_ARCH_TCC898X)
#define MCCR0_FRAME_BEGIN_POSITION_Pos \
	(25)
#define MCCR0_FRAME_BEGIN_POSITION_Msk \
	((uint32_t)1U << MCCR0_FRAME_BEGIN_POSITION_Pos)
#define MCCR0_FRAME_BEGIN_EARLY_MODE \
	((uint32_t)0U << MCCR0_FRAME_BEGIN_POSITION_Pos)
#define MCCR0_FRAME_BEGIN_NORMAL_MODE \
	((uint32_t)1U << MCCR0_FRAME_BEGIN_POSITION_Pos)
#else
#define MCCR0_FRAME_BEGIN_POSITION_Pos \
	(25)
#define MCCR0_FRAME_BEGIN_POSITION_Msk \
	((uint32_t)3U << MCCR0_FRAME_BEGIN_POSITION_Pos)
#define MCCR0_FRAME_BEGIN_EARLY_MODE \
	((uint32_t)0U << MCCR0_FRAME_BEGIN_POSITION_Pos)
#define MCCR0_FRAME_BEGIN_NORMAL_MODE \
	((uint32_t)1U << MCCR0_FRAME_BEGIN_POSITION_Pos)
#define MCCR0_FRAME_BEGIN_MODE2 \
	((uint32_t)2U << MCCR0_FRAME_BEGIN_POSITION_Pos)
#define MCCR0_FRAME_BEGIN_MODE3 \
	((uint32_t)3U << MCCR0_FRAME_BEGIN_POSITION_Pos)
#endif//defined(CONFIG_ARCH_TCC802X) || defined(CONFIG_ARCH_TCC898X)

#define MCCR0_MODE_SELECT_Pos \
	(26)
#define MCCR0_MODE_SELECT_Msk \
	((uint32_t)1U << MCCR0_MODE_SELECT_Pos)
#define MCCR0_MODE_SELECT_DISABLE \
	((uint32_t)0U << MCCR0_MODE_SELECT_Pos)
#define MCCR0_MODE_SELECT_ENABLE \
	((uint32_t)1U << MCCR0_MODE_SELECT_Pos)

#define MCCR0_CIRRUS_LATE_Pos \
	(27)
#define MCCR0_CIRRUS_LATE_Msk \
	((uint32_t)1U << MCCR0_CIRRUS_LATE_Pos)
#define MCCR0_CIRRUS_LATE_DISABLE \
	((uint32_t)0U << MCCR0_CIRRUS_LATE_Pos)
#define MCCR0_CIRRUS_LATE_ENABLE \
	((uint32_t)1U << MCCR0_CIRRUS_LATE_Pos)

#define MCCR0_DAO4_MASK_Pos \
	(27)
#define MCCR0_DAO4_MASK_Msk \
	((uint32_t)1U << MCCR0_DAO3_MASK_Pos)
#define MCCR0_DAO4_MASK_DISABLE \
	((uint32_t)0U << MCCR0_DAO3_MASK_Pos)
#define MCCR0_DAO4_MASK_ENABLE \
	((uint32_t)1U << MCCR0_DAO3_MASK_Pos)

#define MCCR0_DAO3_MASK_Pos \
	(28)
#define MCCR0_DAO3_MASK_Msk \
	((uint32_t)1U << MCCR0_DAO3_MASK_Pos)
#define MCCR0_DAO3_MASK_DISABLE \
	((uint32_t)0U << MCCR0_DAO3_MASK_Pos)
#define MCCR0_DAO3_MASK_ENABLE \
	((uint32_t)1U << MCCR0_DAO3_MASK_Pos)

#define MCCR0_DAO2_MASK_Pos \
	(29)
#define MCCR0_DAO2_MASK_Msk \
	((uint32_t)1U << MCCR0_DAO2_MASK_Pos)
#define MCCR0_DAO2_MASK_DISABLE \
	((uint32_t)0U << MCCR0_DAO2_MASK_Pos)
#define MCCR0_DAO2_MASK_ENABLE \
	((uint32_t)1U << MCCR0_DAO2_MASK_Pos)

#define MCCR0_DAO1_MASK_Pos \
	(30)
#define MCCR0_DAO1_MASK_Msk \
	((uint32_t)1U << MCCR0_DAO1_MASK_Pos)
#define MCCR0_DAO1_MASK_DISABLE \
	((uint32_t)0U << MCCR0_DAO1_MASK_Pos)
#define MCCR0_DAO1_MASK_ENABLE \
	((uint32_t)1U << MCCR0_DAO1_MASK_Pos)

#define MCCR0_DAO0_MASK_Pos \
	(31)
#define MCCR0_DAO0_MASK_Msk \
	((uint32_t)1U << MCCR0_DAO0_MASK_Pos)
#define MCCR0_DAO0_MASK_DISABLE \
	((uint32_t)0U << MCCR0_DAO0_MASK_Pos)
#define MCCR0_DAO0_MASK_ENABLE \
	((uint32_t)1U << MCCR0_DAO0_MASK_Pos)

/****** DAI Multi Channel Control Register0 (MCCR0), Offset:0x1048 ******/
#define MCCR1_VALID_END_Pos \
	(0)
#define MCCR1_VALID_END_Msk	 \
	(0x1FFU << MCCR1_VALID_END_Pos)

#define MCCR1_DAO0_PATH_Pos \
	(9)
#define MCCR1_DAO0_PATH_Msk \
	((uint32_t)1U << MCCR1_DAO0_PATH_Pos)
#define MCCR1_DAO0_PATH_ADMA \
	((uint32_t)0U << MCCR1_DAO0_PATH_Pos)
#define MCCR1_DAO0_PATH_ASRC \
	((uint32_t)1U << MCCR1_DAO0_PATH_Pos)

#define MCCR1_DAO1_PATH_Pos \
	(10)
#define MCCR1_DAO1_PATH_Msk \
	((uint32_t)1U << MCCR1_DAO1_PATH_Pos)
#define MCCR1_DAO1_PATH_ADMA \
	((uint32_t)0U << MCCR1_DAO1_PATH_Pos)
#define MCCR1_DAO1_PATH_ASRC \
	((uint32_t)1U << MCCR1_DAO1_PATH_Pos)

#define MCCR1_DAO2_PATH_Pos \
	(11)
#define MCCR1_DAO2_PATH_Msk \
	((uint32_t)1U << MCCR1_DAO2_PATH_Pos)
#define MCCR1_DAO2_PATH_ADMA \
	((uint32_t)0U << MCCR1_DAO2_PATH_Pos)
#define MCCR1_DAO2_PATH_ASRC \
	((uint32_t)1U << MCCR1_DAO2_PATH_Pos)

#define MCCR1_DAO3_PATH_Pos \
	(12)
#define MCCR1_DAO3_PATH_Msk \
	((uint32_t)1U << MCCR1_DAO3_PATH_Pos)
#define MCCR1_DAO3_PATH_ADMA \
	((uint32_t)0U << MCCR1_DAO3_PATH_Pos)
#define MCCR1_DAO3_PATH_ASRC \
	((uint32_t)1U << MCCR1_DAO3_PATH_Pos)

/****** DAI Digital Radio Mode Register (DRMR), Offset:0x1050 ******/
#define DRMR_RX_FIFO_CLEAR_Pos \
	(21)
#define DRMR_RX_FIFO_CLEAR_Msk \
	((uint32_t)1U << DRMR_RX_FIFO_CLEAR_Pos)
#define DRMR_RX_FIFO_RELEASE \
	((uint32_t)0U << DRMR_RX_FIFO_CLEAR_Pos)
#define DRMR_RX_FIFO_CLEAR \
	((uint32_t)1U << DRMR_RX_FIFO_CLEAR_Pos)

#define DRMR_TX_FIFO_CLEAR_Pos \
	(20)
#define DRMR_TX_FIFO_CLEAR_Msk \
	((uint32_t)1U << DRMR_TX_FIFO_CLEAR_Pos)
#define DRMR_TX_FIFO_RELEASE \
	((uint32_t)0U << DRMR_TX_FIFO_CLEAR_Pos)
#define DRMR_TX_FIFO_CLEAR \
	((uint32_t)1U << DRMR_TX_FIFO_CLEAR_Pos)

#define DRMR_RADIO_FIFO_THRESH_Pos \
	(16)
#define DRMR_RADIO_FIFO_THRESH_Msk \
	((uint32_t)3U << DRMR_RADIO_FIFO_THRESH_Pos)
#define DRMR_RADIO_FIFO_THRESH_64 \
	((uint32_t)0U << DRMR_RADIO_FIFO_THRESH_Pos)
#define DRMR_RADIO_FIFO_THRESH_128 \
	((uint32_t)1U << DRMR_RADIO_FIFO_THRESH_Pos)
#define DRMR_RADIO_FIFO_THRESH_256 \
	((uint32_t)2U << DRMR_RADIO_FIFO_THRESH_Pos)

#define DRMR_RADIO_PORTSEL_Pos \
	(8)
#define DRMR_RADIO_PORTSEL_Msk \
	((uint32_t)3U << DRMR_RADIO_PORTSEL_Pos)
#define DRMR_RADIO_PORTSEL_1 \
	((uint32_t)0U << DRMR_RADIO_PORTSEL_Pos)
#define DRMR_RADIO_PORTSEL_2 \
	((uint32_t)1U << DRMR_RADIO_PORTSEL_Pos)
#define DRMR_RADIO_PORTSEL_4 \
	((uint32_t)2U << DRMR_RADIO_PORTSEL_Pos)

#define DRMR_RADIO_ENABLE_MODE_Pos \
	(4)
#define DRMR_RADIO_ENABLE_MODE_Msk \
	((uint32_t)1U << DRMR_RADIO_ENABLE_MODE_Pos)
#define DRMR_RADIO_DISABLE \
	((uint32_t)0U << DRMR_RADIO_ENABLE_MODE_Pos)
#define DRMR_RADIO_ENABLE \
	((uint32_t)1U << DRMR_RADIO_ENABLE_MODE_Pos)

#define DRMR_RADIO_BITMODE_Pos \
	(0)
#define DRMR_RADIO_BITMODE_Msk \
	((uint32_t)0xFU << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_16 \
	((uint32_t)0U << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_20 \
	((uint32_t)1U << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_24 \
	((uint32_t)2U << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_30 \
	((uint32_t)3U << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_32 \
	((uint32_t)4U << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_40 \
	((uint32_t)5U << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_48 \
	((uint32_t)6U << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_60 \
	((uint32_t)7U << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_64 \
	((uint32_t)8U << DRMR_RADIO_BITMODE_Pos)
#define DRMR_RADIO_BITMODE_80 \
	((uint32_t)9U << DRMR_RADIO_BITMODE_Pos)

/****** DAI Clock Divider Register (DRMR), Offset:0x1050 ******/
#if defined(CONFIG_ARCH_TCC803X) || defined(CONFIG_ARCH_TCC805X) || \
	defined(CONFIG_ARCH_TCC806X) || defined(CONFIG_ARCH_TCC899X) || \
	defined(CONFIG_ARCH_TCC901X)
#define DCLKDIV_DAI_FRAME_CLK_DIV_Pos \
	(0)
#if defined(CONFIG_ARCH_TCC805X) || defined(CONFIG_ARCH_TCC806X)
#define DCLKDIV_DAI_FRAME_CLK_DIV_Msk \
	((uint32_t)7U << DCLKDIV_DAI_FRAME_CLK_DIV_Pos)
#else
#define DCLKDIV_DAI_FRAME_CLK_DIV_Msk \
	((uint32_t)3U << DCLKDIV_DAI_FRAME_CLK_DIV_Pos)
#endif
///< 32fs->fs
#define DCLKDIV_DAI_FRAME_CLK_DIV_32 \
	((uint32_t)0U << DCLKDIV_DAI_FRAME_CLK_DIV_Pos)
///< 48fs->fs
#define DCLKDIV_DAI_FRAME_CLK_DIV_48 \
	((uint32_t)1U << DCLKDIV_DAI_FRAME_CLK_DIV_Pos)
///< 64fs->fs
#define DCLKDIV_DAI_FRAME_CLK_DIV_64 \
	((uint32_t)2U << DCLKDIV_DAI_FRAME_CLK_DIV_Pos)
///< xfs->fs
#define DCLKDIV_DAI_FRAME_CLK_DIV_X \
	((uint32_t)3U << DCLKDIV_DAI_FRAME_CLK_DIV_Pos)

#if defined(CONFIG_ARCH_TCC805X) || defined(CONFIG_ARCH_TCC806X)
#define DCLKDIV_DAI_FRAME_CLK_DIV_512 \
	((uint32_t)4U << DCLKDIV_DAI_FRAME_CLK_DIV_Pos)
	//< 512fs->fs (only for DP)
#endif

#define DCLKDIV_DAI_BIT_CLK_DIV_Pos \
	(8)
#define DCLKDIV_DAI_BIT_CLK_DIV_Msk \
	((uint32_t)7U << DCLKDIV_DAI_BIT_CLK_DIV_Pos)
///< 256fs ->64fs
#define DCLKDIV_DAI_BIT_CLK_DIV_4 \
	((uint32_t)0U << DCLKDIV_DAI_BIT_CLK_DIV_Pos)
///< 384fs ->64fs
#define DCLKDIV_DAI_BIT_CLK_DIV_6 \
	((uint32_t)1U << DCLKDIV_DAI_BIT_CLK_DIV_Pos)
///< 512fs ->64fs
#define DCLKDIV_DAI_BIT_CLK_DIV_8 \
	((uint32_t)2U << DCLKDIV_DAI_BIT_CLK_DIV_Pos)
///< 1024fs->64fs
#define DCLKDIV_DAI_BIT_CLK_DIV_16 \
	((uint32_t)3U << DCLKDIV_DAI_BIT_CLK_DIV_Pos)
///< 1536fs->64fs
#define DCLKDIV_DAI_BIT_CLK_DIV_24 \
	((uint32_t)4U << DCLKDIV_DAI_BIT_CLK_DIV_Pos)
///< 2048fs->64fs
#define DCLKDIV_DAI_BIT_CLK_DIV_32 \
	((uint32_t)5U << DCLKDIV_DAI_BIT_CLK_DIV_Pos)
///< 3072fs->64fs
#define DCLKDIV_DAI_BIT_CLK_DIV_48 \
	((uint32_t)6U << DCLKDIV_DAI_BIT_CLK_DIV_Pos)
///< 4096fs->64fs
#define DCLKDIV_DAI_BIT_CLK_DIV_64 \
	((uint32_t)7U << DCLKDIV_DAI_BIT_CLK_DIV_Pos)
#endif

#endif /*_TCC_SDR_HW_H_*/
