// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (C) 2020 Telechips Inc.
 */

#include "../../../../../include/generated/autoconf.h"

#undef SZ_1MB
#define SZ_1MB 				(1024*1024)
#define ARRAY_16MBYTE(x)          	((((x) + ((16*SZ_1MB)-1))>> 24) << 24)
#define ARRAY_MBYTE(x)            	((((x) + (SZ_1MB-1))>> 20) << 20)
#define ARRAY_256KBYTE(x)         	((((x) + ((SZ_1MB/4)-1))>> 18) << 18)

//***************************** DISPLAY ******************************/
#define PRIMARY_FRAMEBUFFER_WIDTH	1920
#define PRIMARY_FRAMEBUFFER_HEIGHT	720
#if defined(CONFIG_FB_NEW_FB1)
#define SECONDARY_FRAMEBUFFER_WIDTH 	1920
#define SECONDARY_FRAMEBUFFER_HEIGHT 	720
#else
#define SECONDARY_FRAMEBUFFER_WIDTH	0
#define SECONDARY_FRAMEBUFFER_HEIGHT	0
#endif
#if defined(CONFIG_FB_NEW_FB2)
#define TERTIARY_FRAMEBUFFER_WIDTH 	1920
#define TERTIARY_FRAMEBUFFER_HEIGHT 	720
#else
#define TERTIARY_FRAMEBUFFER_WIDTH	0
#define TERTIARY_FRAMEBUFFER_HEIGHT	0
#endif
//****************************** Camera ******************************/
#define CAMERA_INPUT_WIDTH		720
#define CAMERA_INPUT_HEIGHT		480
#define CAMERA_OUTPUT_WIDTH		1920
#define CAMERA_OUTPUT_HEIGHT		720

#if defined(CONFIG_VIDEO_TCCVIN)
#define FRAMES_CAMERA_VIQE		4	// 4: 3D Mode
#define FRAMES_CAMERA_PREVIEW		4
#define FRAMES_CAMERA_CAPTURE		0
#else
#define FRAMES_CAMERA_VIQE		0
#define FRAMES_CAMERA_PREVIEW		0
#define FRAMES_CAMERA_CAPTURE		0
#endif//defined(CONFIG_VIDEO_TCCVIN)
#if defined(CONFIG_OVERLAY_PGL)
#if defined(CONFIG_VIDEO_TCCVIN_SAFE_ASSURE)
#define FRAMES_CAMERA_PGL		2
#else
#define FRAMES_CAMERA_PGL		1
#endif//defined(CONFIG_VIDEO_TCCVIN_SAFE_ASSURE)
#else
#define FRAMES_CAMERA_PGL		0
#endif//defined(CONFIG_OVERLAY_PGL)
#if defined(CONFIG_VIDEO_TCCVIN_SAFE_ASSURE)
#define FRAMES_CAMERA_SAFE_ASSURE	5
#else
#define FRAMES_CAMERA_SAFE_ASSURE	0
#endif//defined(CONFIG_VIDEO_TCCVIN_SAFE_ASSURE)

#define FRAMES_REARCAMERA_VIQE		(FRAMES_CAMERA_VIQE)
#define FRAMES_REARCAMERA		(FRAMES_CAMERA_PREVIEW + FRAMES_CAMERA_CAPTURE)
#define FRAMES_PARKING_GUI		(FRAMES_CAMERA_PGL)
#define FRAMES_OVERLAY_ROT		(FRAMES_CAMERA_SAFE_ASSURE)

#define PMAP_SIZE_FB_VIDEO		ARRAY_MBYTE(PRIMARY_FRAMEBUFFER_WIDTH * PRIMARY_FRAMEBUFFER_HEIGHT * 4 * 3)
#define PMAP_SIZE_FB1_VIDEO		ARRAY_MBYTE(SECONDARY_FRAMEBUFFER_WIDTH * SECONDARY_FRAMEBUFFER_HEIGHT * 4 * 3)
#define PMAP_SIZE_FB2_VIDEO		ARRAY_MBYTE(TERTIARY_FRAMEBUFFER_WIDTH * TERTIARY_FRAMEBUFFER_HEIGHT * 4 * 3)
#define PMAP_SIZE_OVERLAY_ROT		ARRAY_MBYTE(PRIMARY_FRAMEBUFFER_WIDTH * PRIMARY_FRAMEBUFFER_HEIGHT * 4 * FRAMES_OVERLAY_ROT)
#define PMAP_SIZE_UMP_RESERVED		ARRAY_MBYTE((PRIMARY_FRAMEBUFFER_WIDTH * 4) * PRIMARY_FRAMEBUFFER_HEIGHT * 4 * 4)
#define PMAP_SIZE_REARCAMERA_VIQE	ARRAY_MBYTE((CAMERA_INPUT_WIDTH * (CAMERA_INPUT_HEIGHT / 2 ) * 4 * FRAMES_REARCAMERA_VIQE) * 3 / 2)
#define PMAP_SIZE_REARCAMERA		ARRAY_MBYTE(CAMERA_OUTPUT_WIDTH * CAMERA_OUTPUT_HEIGHT * 4 * FRAMES_REARCAMERA)
#define PMAP_SIZE_PARKING_GUI		ARRAY_MBYTE(CAMERA_OUTPUT_WIDTH * CAMERA_OUTPUT_HEIGHT * 4 * FRAMES_PARKING_GUI)

#define PMAP_SIZE_REARCAMERAS		ARRAY_MBYTE(PMAP_SIZE_REARCAMERA_VIQE + PMAP_SIZE_REARCAMERA + PMAP_SIZE_PARKING_GUI + 0x10000)	// 0x10000: padding

#define RESERVED_MEM_BASE		( 0x4A800000 )
#define RESERVED_MEM_SIZE		( 0x30000000 - PMAP_SIZE_REARCAMERAS )

#define REARCAMERA_MEM_BASE		( RESERVED_MEM_BASE + RESERVED_MEM_SIZE )
#define REARCAMERA_MEM_SIZE		( PMAP_SIZE_REARCAMERAS )
