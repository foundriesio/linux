/*
 * Device tree for Telechips TCC8030 Dual Chip Solution - IVI Side
 *
 * Copyright (C) 2018 Telechips Inc. - http://www.telechips.com
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include "tcc8031-android-avn.dtsi"

/ {
	/* Describe here after remove this statement if you have something to be override. */

	i2c@16300000 {
		pmic@5A {
			regulators {
				bcore1 {
					regulator-min-microvolt = <780000>;
					regulator-max-microvolt = <860000>;
				};
				bcore2 {
					regulator-min-microvolt = <780000>;
					regulator-max-microvolt = <860000>;
				};
				bpro {
					regulator-min-microvolt = <870000>;
					regulator-max-microvolt = <970000>;
				};
				bmem {
					regulator-min-microvolt = <780000>;
					regulator-max-microvolt = <860000>;
				};
				bio {
					regulator-min-microvolt = <780000>;
					regulator-max-microvolt = <860000>;
				};
				bperi {
					regulator-min-microvolt = <1710000>;
					regulator-max-microvolt = <1890000>;
				};
				ldo3 {
					regulator-min-microvolt = <3140000>;
					regulator-max-microvolt = <3470000>;
				};
				ldo7 {
					regulator-min-microvolt = <1140000>;
					regulator-max-microvolt = <1260000>;
				};
				ldo8 {
					regulator-min-microvolt = <1710000>;
					regulator-max-microvolt = <1890000>;
				};
				ldo9 {
					regulator-min-microvolt = <3140000>;
					regulator-max-microvolt = <3470000>;
				};
				ldo11 {
					regulator-min-microvolt = <3140000>;
					regulator-max-microvolt = <3470000>;
				};
			};
		};
	};

	tm123xdhp90 {
		compatible = "telechips,lvds-tm123xdhp90";
		status = "okay";
		lvds0 = <&lvds_phy>;
		power-on-gpios = <&gpb 17>;		// LCD_ON
		reset-gpios = <&gpb 18 0>;		// LCD_RST
		/*
		display-on-gpios = ;		// LCD_DISP
		lvds-stby-gpios = ;		// LCD_DE = LVDS_STBY in LVDS
		lvds-power-gpios = ;		// LVDS_EN
		lvds-power-gpios1 = ;		// V_5V0_EN
		*/
		mode = <1>;		/* 0: single 1: dual */
		ports = <2 3 4>;
	};

	gpu1: gpu@0x10200000 {
		status = "disabled";
	};

	vioc_mgr@0 {
		status = "okay";
	};

};


/* SDIO */
&sdhc2 { // Wi-Fi tcm3800
	status = "okay";
	compatible = "telechips,tcc-sdhc";
	controller-id = <2>;
	bus-width = <4>;
	max-frequency = <200000000>;
	pinctrl-names = "default", "active";
	pinctrl-0 = <&sd2_bus4_idle>;
	pinctrl-1 = <&sd2_clk &sd2_cmd &sd2_bus4 &out0_clk>;
	clocks = <&clk_peri PERI_SDMMC2 &clk_io IOBUS_SDMMC2 &clk_peri PERI_OUT5>;
	clock-names = "mmc_fclk", "mmc_hclk", "ext32";

	tcc-mmc-clk-out-tap = <0>;
	tcc-mmc-cmd-tap = <0>;
	tcc-mmc-data-tap = <0>;

	cd-inverted;
	//wp-inverted;
	//non-removable;
	//broken-cd;
	keep-power-in-suspend;
	//enable-sdio-wakeup;
	//cap-power-off-card;
	cap-sdio-irq;
	cap2-no-sleep-cmd;
	cap-bus-width-test;

	//wp-gpios = <&gpb 7 0>;
	//cd-gpios = <&gpext1 5 0>;
	//vctrl-gpio = <&gpsd 10 0>;
	//pwr-gpio = <&gpext2 7 0>;

	wifi-polling;
	ext32-enable; // make_rtc

	/*cap-sd-highspeed;*/
	/*cap-mmc-highspeed;*/

	/* High-speed DDR(emmc & SD3.0 DDR50) */
	//cap-1-8V-ddr;
	//cap-uhs-ddr50;

	/* SD3.0 Common */
	cap-vdd-165-195;

	/* SD3.0 SDR12 */
	//cap-uhs-sdr12;

	/* SD3.0 SDR25 */
	//cap-uhs-sdr25;
	//cap-uhs-driver_type_a;

	/* SD3.0 SDR50 */
	//cap-uhs-sdr50;
	//cap-uhs-driver_type_c;

	/* SD3.0 SDR104 */
	cap-uhs-sdr104;
	cap-uhs-driver_type_d;
	cap-uhs-cmd23;
	cap-adma;
};

&tcc_timer {
	/* Timer 0 is used for WIFI LPO */
	tcc-timer-reserved = <0>;
};

&tcm3800 {
	compatible = "telechips, tcm3800";
	wifi_pwr-gpio = <&gpsd2 6 0>;
	wlreg_on-gpio = <&gpsd2 8 0>;
	//wifi_pwr_1p8v-gpio = <&gpsd1 6 0>;
	//wifi_pwr_3p3v-gpio = <&gpsd1 7 0>;
};
