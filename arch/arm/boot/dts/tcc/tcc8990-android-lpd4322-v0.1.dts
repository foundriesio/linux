// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Device tree for Telechips TCC8990 STB board
 *
 * Copyright (C) 2018 Telechips Inc.
 */

#ifndef DT_OVERLAY
/dts-v1/;
#include "tcc8990.dtsi"
#endif

#include "tcc8990-android-stb.dtsi"

#if 0 // 0 : force detect, 1 : not force detect
/* SDIO */
&sdhc0 {
	status = "okay";
	controller-id = <0>;
	bus-width = <4>;
	max-frequency = <200000000>;
	pinctrl-names = "default", "active";
	pinctrl-0 = <&sd0_2_4_idle>;
	pinctrl-1 = <&sd0_2_clk &sd0_2_cmd &sd0_2_bus4>;
	channel-mux = <2>; // 0b10, gpsd1

	cd-inverted;
	//wp-inverted;
	//non-removable;
	//broken-cd;
	keep-power-in-suspend;
	//enable-sdio-wakeup;
	//cap-power-off-card;
	cap-sdio-irq;
	cap2-no-sleep-cmd;
	cap-bus-width-test;

	//wp-gpios = <&gpb 7 0>;
	//cd-gpios = <&gpext1 5 0>;
	//vctrl-gpio = <&gpsd 10 0>;
	//pwr-gpio = <&gpext2 7 0>;

	//cd-polling;
	wifi-polling;

	/* High-speed SDR */
	//cap-sd-highspeed;
	//cap-mmc-highspeed;

	/* High-speed DDR(emmc & SD3.0 DDR50) */
	//cap-1-8V-ddr;
	//cap-uhs-ddr50;

	/* SD3.0 Common */
	cap-vdd-165-195;

	/* SD3.0 SDR12 */
	//cap-uhs-sdr12;

	/* SD3.0 SDR25 */
	//cap-uhs-sdr25;
	//cap-uhs-driver_type_a;

	/* SD3.0 SDR50 */
	//cap-uhs-sdr50;
	//cap-uhs-driver_type_c;

	/* SD3.0 SDR104 */
	cap-uhs-sdr104;
	cap-uhs-driver_type_d;
	cap-uhs-cmd23;
	cap-adma;

	/* eMMC HS200 */
	//mmc-hs200-1_8v;
	//cap-uhs-driver_type_d;
	//cap-uhs-cmd23;
	//cap-adma;
};

&tcm3800 {
	compatible = "telechips, tcm3800";
	wifi_pwr-gpio = <&gpsd1 10 0>;
	wlreg_on-gpio = <&gpe 15 0>;
	wifi_pwr_1p8v-gpio = <&gpsd1 6 0>;
	wifi_pwr_3p3v-gpio = <&gpsd1 7 0>;
};
#else
&vqmmc_sdio {
	compatible = "regulator-fixed";
	regulator-name = "vqmmc_sdio";
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&sdhc0 {
	compatible = "telechips,tcc-sdhci";
	tcc-mmc-channel-mux = <1>;
	//non-removable;
	keep-power-in-suspend;
	cap-sdio-irq;

	vqmmc-supply = <&vqmmc_sdio>;

	cd-force-presence-change;

	tcm38xx {
		compatible = "telechips,tcm38xx";
		wifi_pwr-gpio = <&gpsd1 10 0>;
		wlreg_on-gpio = <&gpe 15 0>;
		wifi_pwr_1p8v-gpio = <&gpsd1 6 0>;
		wifi_pwr_3p3v-gpio = <&gpsd1 7 0>;
	};
};
#endif

&tcc_bluetooth {
	compatible = "telechips, tcc_bluetooth";
	bt_power-gpio = <&gpsd1 10 0>; /* BTWIFI_VBAT_EN */
	bt_reg_on-gpio = <&gpf 31 0>;
	bt_wake-gpio = <&gpf 30 0>;
	bt_hwake-gpio = <&gpc 21 0>;
	bt_power_1p8v-gpio = <&gpsd1 6 0>;
	bt_power_3p3v-gpio = <&gpsd1 7 0>;
	status = "okay";
};

/* SD Card */
&vqmmc_sd {
	compatible = "regulator-gpio";

	regulator-name = "vqmmc_sd";
	regulator-type = "voltage";
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <3300000>;
	regulator-ramp-delay = <10>;
	regulator-always-on;

	gpios = <&gpa 30 0x4>;
	gpios-states = <0>;
	states = < 1800000 0x0
		3300000 0x1
	>;
};

&sdhc2 {
	broken-cd;
	cd-inverted;
	keep-power-in-suspend;

	wp-gpios = <&gpsd0 10 0>;
	cd-gpios = <&gpf 29 0>;

	vqmmc-supply = <&vqmmc_sd>;
};

&gpio_keys {
	compatible = "gpio-keys";
	#address-cells = <1>;
	#size-cells = <0>;
	autorepeat;
	button@0 {
		label = "Power Key";
		linux,code = <116>;
		gpios = <&gpd 20 1>;
	};
};

&gpio_keys_polled {
        compatible = "gpio-keys-polled";
        #address-cells = <1>;
        #size-cells = <0>;
        poll-interval = <100>;
        autorepeat;
        button@0 {
                label = "BT Auto Pair Key";
                linux,code = <218>;
                gpios = <&gpg 11 1>;
        };
};
