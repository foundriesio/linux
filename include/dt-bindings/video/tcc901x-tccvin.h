// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (C) 2020 Telechips Inc.
 */
#ifndef __DT_BINDINGS_TCC901X_VIDEO_CAMERA_H
#define __DT_BINDINGS_TCC901X_VIDEO_CAMERA_H

#undef SZ_1MB
#define SZ_1MB 				(1024*1024)
#define ARRAY_16MBYTE(x)          	((((x) + ((16*SZ_1MB)-1))>> 24) << 24)
#define ARRAY_MBYTE(x)            	((((x) + (SZ_1MB-1))>> 20) << 20)
#define ARRAY_256KBYTE(x)         	((((x) + ((SZ_1MB/4)-1))>> 18) << 18)
#define TCC_ALIGN(value, base)   (((value)+((base)-1))&~((base)-1))

#define CAMERA_INPUT_WIDTH		720
#define CAMERA_INPUT_HEIGHT		480
#define CAMERA_OUTPUT_WIDTH		1920
#define CAMERA_OUTPUT_HEIGHT		720

#define FRAMES_CAMERA_VIQE		4	// 4: 3D Mode
#define FRAMES_CAMERA_PREVIEW		4
#define FRAMES_CAMERA_CAPTURE		0

#define FRAMES_CAMERA_PGL		1 /* 2: safe assure */
#define FRAMES_CAMERA_SAFE_ASSURE	0 /* 5: safe assure */

#define FRAMES_REARCAMERA_VIQE		(FRAMES_CAMERA_VIQE)
#define FRAMES_REARCAMERA		(FRAMES_CAMERA_PREVIEW + FRAMES_CAMERA_CAPTURE)
#define FRAMES_PARKING_GUI		(FRAMES_CAMERA_PGL)
#define FRAMES_OVERLAY_ROT		(FRAMES_CAMERA_SAFE_ASSURE)

#define PMAP_SIZE_FB_VIDEO		ARRAY_MBYTE(PRIMARY_FRAMEBUFFER_WIDTH * PRIMARY_FRAMEBUFFER_HEIGHT * 4 * 3)
#define PMAP_SIZE_FB1_VIDEO		ARRAY_MBYTE(SECONDARY_FRAMEBUFFER_WIDTH * SECONDARY_FRAMEBUFFER_HEIGHT * 4 * 3)
#define PMAP_SIZE_FB2_VIDEO		ARRAY_MBYTE(TERTIARY_FRAMEBUFFER_WIDTH * TERTIARY_FRAMEBUFFER_HEIGHT * 4 * 3)
#define PMAP_SIZE_OVERLAY_ROT		ARRAY_MBYTE(PRIMARY_FRAMEBUFFER_WIDTH * PRIMARY_FRAMEBUFFER_HEIGHT * 4 * FRAMES_OVERLAY_ROT)
#define PMAP_SIZE_UMP_RESERVED		ARRAY_MBYTE((PRIMARY_FRAMEBUFFER_WIDTH * 4) * PRIMARY_FRAMEBUFFER_HEIGHT * 4 * 4)
#define PMAP_SIZE_REARCAMERA_VIQE	ARRAY_MBYTE((CAMERA_INPUT_WIDTH * (CAMERA_INPUT_HEIGHT / 2 ) * 4 * FRAMES_REARCAMERA_VIQE) * 3 / 2)
#define PMAP_SIZE_REARCAMERA		ARRAY_MBYTE(CAMERA_OUTPUT_WIDTH * CAMERA_OUTPUT_HEIGHT * 4 * FRAMES_REARCAMERA)
#define PMAP_SIZE_PARKING_GUI		ARRAY_MBYTE(CAMERA_OUTPUT_WIDTH * CAMERA_OUTPUT_HEIGHT * 4 * FRAMES_PARKING_GUI)

#define PMAP_SIZE_REARCAMERAS		ARRAY_MBYTE(PMAP_SIZE_REARCAMERA_VIQE + PMAP_SIZE_REARCAMERA + PMAP_SIZE_PARKING_GUI + 0x10000)	// 0x10000: padding
#define PMAP_SIZE_ION_CARVEOUT_CAM	(32*SZ_1MB)

#define RESERVED_MEM_BASE		( 0x4A800000 )
#define RESERVED_MEM_SIZE		( 0x30000000 - PMAP_SIZE_REARCAMERAS )

#define REARCAMERA_MEM_BASE		( RESERVED_MEM_BASE + RESERVED_MEM_SIZE )
#define REARCAMERA_MEM_SIZE		( PMAP_SIZE_REARCAMERAS )
#define ION_CARVEOUT_CAM_MEM_BASE		( REARCAMERA_MEM_BASE + REARCAMERA_MEM_SIZE )
#define ION_CARVEOUT_CAM_MEM_SIZE		( PMAP_SIZE_ION_CARVEOUT_CAM )

/* Early Camera */
#define PMAP_REARCAMERA_VIQE_SIZE	ARRAY_MBYTE((CAMERA_INPUT_WIDTH * (CAMERA_INPUT_HEIGHT / 2 ) * 4 * 4 * 3) / 2)
#define PMAP_REARCAMERA_SIZE		ARRAY_MBYTE(PRIMARY_TARGET_WIDTH * PRIMARY_TARGET_HEIGHT * 4 * 4)
#define PMAP_REARCAMERA4_SIZE		ARRAY_MBYTE(PRIMARY_TARGET_WIDTH * PRIMARY_TARGET_HEIGHT * 4 * 4)
#define PMAP_REARCAMERA5_SIZE		ARRAY_MBYTE(PRIMARY_TARGET_WIDTH * PRIMARY_TARGET_HEIGHT * 4 * 4)
#define PMAP_PARKING_GUI_SIZE		ARRAY_MBYTE(PRIMARY_TARGET_WIDTH * PRIMARY_TARGET_HEIGHT * 4)
#define PMAP_SIZE_EARLY_REARCAM		( 0x0	\
					+ PMAP_REARCAMERA_VIQE_SIZE \
					+ PMAP_REARCAMERA_SIZE	\
					+ PMAP_REARCAMERA4_SIZE	\
					+ PMAP_REARCAMERA5_SIZE	\
					+ PMAP_PARKING_GUI_SIZE	\
					)

#endif
