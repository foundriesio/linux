/* soc/tcc/pmap.h
 *
 * Copyright (C) 2010 Telechips, Inc.
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef SOC_TCC_SIP_H
#define SOC_TCC_SIP_H

#include <linux/arm-smccc.h>

#define SIP_CMD_TAG		(0x82000000)
/* 8200_TXXX	: SMC Function ID Struct*/
/* [27:24] 2	: Service Call Range	*/
/* [15:12] T	: Device Type		*/
/* [11:00] XXX	: Sub Command		*/

/* SMC function IDs for SiP Service queries */
#define IS_SIP_DEV(x)		(((x)&SIP_CMD_TAG) ? 1 : 0)
#define GET_SIP_DEV(x)		(((x)>>12)&0xF)
#define SIP_DEV(x)		(((x)&0xF)<<12)
#define SIP_DEV_CLK		(0x0)
#define SIP_DEV_WAKEUP		(0x1)
#define SIP_DEV_WATCHDOG	(0x2)
#define SIP_DEV_RESET		(0x3)
#define SIP_DEV_REMOCON		(0x4)
#define SIP_DEV_TCSB		(0x5)
#define SIP_DEV_DRAM		(0x6)
#define SIP_DEV_CHIP		(0x7)
#define SIP_DEV_RESERVED0	(0x8)
#define SIP_DEV_RESERVED1	(0x9)
#define SIP_DEV_RESERVED2	(0xA)
#define SIP_DEV_RESERVED3	(0xB)
#define SIP_DEV_RESERVED4	(0xC)
#define SIP_DEV_CRYPTO		(0xD)
#define SIP_DEV_CA7S		(0xE)
#define SIP_DEV_RESERVED5	(0xF)

#define SIP_CMD(dev, cmd)	(SIP_CMD_TAG|SIP_DEV(dev)|(cmd&0xFFF))

#define SMC_OK			(0UL)
#define SMC_UNK			(ULONG_MAX)

/* TCC SiP Service for Clock Driver */
enum {
	/* 0x8200_0000 */
	SIP_CLK_INIT = SIP_CMD(SIP_DEV_CLK, 0x000),
	SIP_CLK_SET_PLL,
	SIP_CLK_GET_PLL,
	SIP_CLK_SET_CLKCTRL,
	SIP_CLK_GET_CLKCTRL,
	SIP_CLK_ENABLE_CLKCTRL,
	SIP_CLK_DISABLE_CLKCTRL,
	SIP_CLK_IS_CLKCTRL,
	SIP_CLK_SET_PCLKCTRL,
	SIP_CLK_GET_PCLKCTRL,
	SIP_CLK_ENABLE_PERI,
	SIP_CLK_DISABLE_PERI,
	SIP_CLK_IS_PERI,
	SIP_CLK_ENABLE_DDIBUS,
	SIP_CLK_DISABLE_DDIBUS,
	SIP_CLK_IS_DDIBUS,
	SIP_CLK_RESET_DDIBUS,
	SIP_CLK_ENABLE_IOBUS,
	SIP_CLK_DISABLE_IOBUS,
	SIP_CLK_IS_IOBUS,
	SIP_CLK_RESET_IOBUS,
	SIP_CLK_ENABLE_HSIOBUS,
	SIP_CLK_DISABLE_HSIOBUS,
	SIP_CLK_IS_HSIOBUS,
	SIP_CLK_RESET_HSIOBUS,
	SIP_CLK_ENABLE_VPUBUS,
	SIP_CLK_DISABLE_VPUBUS,
	SIP_CLK_IS_VPUBUS,
	SIP_CLK_RESET_VPUBUS,
	SIP_CLK_ENABLE_ISODDI,
	SIP_CLK_DISABLE_ISODDI,
	SIP_CLK_IS_ISODDI,
	SIP_CLK_ENABLE_ISOTOP,
	SIP_CLK_DISABLE_ISOTOP,
	SIP_CLK_IS_ISOTOP,
	SIP_CLK_PWDN_DDIBUS,
	SIP_CLK_PWDN_IOBUS,
	SIP_CLK_PWDN_HSIOBUS,
	SIP_CLK_IS_PLL_ENABLED,
	SIP_CLK_SET_DPLL_CONFIG,
	SIP_CLK_SET_PCLKCTRL_DIV,
	SIP_CLK_SET_PCLKCTRL_DCO,
	SIP_CLK_SWRESET,
};

/* TCC SiP Service for Watchdog */
enum {
	/* 0x8200_2000 */
	SIP_WATCHDOG_SETUP = SIP_CMD(SIP_DEV_WATCHDOG, 0x000),
	SIP_WATCHDOG_START,
	SIP_WATCHDOG_STOP,
	SIP_WATCHDOG_PING,
	SIP_WATCHDOG_GET_STATUS,
	SIP_WATCHDOG_SETUP_IRQCNT,
};

/* TCC SiP Service for DRAM */
enum {
	/* 0x8200_6000 */
	SIP_DRAM_TOOL_RDQS = SIP_CMD(SIP_DEV_DRAM, 0x000),
	SIP_DRAM_TOOL_WDQS,
	SIP_DRAM_TOOL_RDQSL,
	SIP_DRAM_TOOL_WDQSL,
	SIP_DRAM_TOOL_SVREF,
	SIP_DRAM_TOOL_DVREF,
	SIP_DRAM_TOOL_RIMP,
	SIP_DRAM_TOOL_WIMP,
	SIP_DRAM_TOOL_TM_INIT,
	SIP_DRAM_TOOL_TM_SET,
	SIP_DRAM_TOOL_CLK,
	SIP_DRAM_TOOL_CA,
	SIP_GET_DRAM_SIZE,
	SIP_DDR_ERROR_CNT,
	SIP_ECC_ERROR_REASON,
};

/* TCC SiP Service for chip info */
enum {
	/* 0x8200_7000 */
	SIP_CHIP_REV = SIP_CMD(SIP_DEV_CHIP, 0x000),
	SIP_CHIP_NAME,
	SIP_CHIP_ID,
	SIP_CHIP_ADD_BOOTTIME,
	SIP_CHIP_GET_BOOTTIME,
	SIP_CHIP_GET_BOOTTIME_NUM,
	SIP_CHIP_GET_BOOT_INFO,
};

#define tcc_sip_chip(id, ...) \
	(arm_smccc_smc((ulong)SIP_CHIP_##id, ##__VA_ARGS__))

/* Crypto SIP Service */
enum {
	/* 0x8200_D000 */
	SIP_CRYPTO_TRNG = SIP_CMD(SIP_DEV_CRYPTO, 0x000),
	SIP_CRYPTO_CIPHER_OPEN,
	SIP_CRYPTO_CIPHER_CLOSE,
	SIP_CRYPTO_CIPHER_ALGORITHM,
	SIP_CRYPTO_CIPHER_IV,
	SIP_CRYPTO_CIPHER_KEY,
	SIP_CRYPTO_CIPHER_SET,
	SIP_CRYPTO_CIPHER_RUN,
};

#endif /* SOC_TCC_SIP_H */
