/*
 * linux/include/video/tcc/viqe_madi_regs_array.h
 * Author:  <linux@telechips.com>
 * Created: Jan 20, 2018
 * Description: TCC MADI h/w block 
 *
 * Copyright (C) 2018 Telechips
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see the file COPYING, or write
 * to the Free Software Foundation, Inc.,
 * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */
#ifndef __TCC_MADI_REGS_ARRAY_H__
#define	__TCC_MADI_REGS_ARRAY_H__

#include <video/tcc/viqe_madi.h>

typedef struct {
	unsigned int offset;
	unsigned int value;
}stMADI_Info;

//DDEI_Data_Capture_IF
stMADI_Info Data_Capture_IF[] = {
//DCAP_M4
#ifdef USE_REG_EXTRACTOR
	{(0x0100<<2), 0x00100000}, // Source-0 Interlaced Y
	{(0x0101<<2), 0x00140000}, // Source-1 Interlaced Y
	{(0x0102<<2), 0x00180000}, // Source-2 Interlaced Y
	{(0x0103<<2), 0x001c0000}, // Source-3 Interlaced Y
#endif
	{(0x0104<<2), 0x00000000},
	{(0x0105<<2), 0x00000000},
	{(0x0106<<2), 0x00000000},
	{(0x0107<<2), 0x00000000},
	{(0x0108<<2), 0x00000000},
	{(0x0109<<2), 0x00000000},
	{(0x010a<<2), 0x00000000},
	{(0x010b<<2), 0x00000000},
	{(0x010c<<2), 0x00000000},
	{(0x010d<<2), 0x00100078}, // linebuf_level[27:16] and row_byte [15:0]
	{(0x010e<<2), 0xe0020080}, // line_num [15:0]
	{(0x010f<<2), 0x00000000},
	{(0x0110<<2), 0x40000401},
	{(0x0111<<2), 0x01000100}, // data width [15:0] and height [31:16]
	{(0x0112<<2), 0x00094480},
	{(0x0113<<2), 0x00000000},
	{(0x0114<<2), 0x00000000},
	{(0x0115<<2), 0x00000000},
	{(0x0116<<2), 0x00000000},
	{(0x0117<<2), 0x00000000},
	{(0x0118<<2), 0x00000212},
	{(0x0119<<2), 0x00000000},
	{(0x011a<<2), 0x00030003}, // [18:16],[2:0] : Data Format => 011: 8bit
	{(0x011b<<2), 0x001f01e1},
#ifdef USE_UNDESCRIPTION_REGS
	{(0x011c<<2), 0x00000c03},
	{(0x011d<<2), 0x00000000},
	{(0x011e<<2), 0x00000000},
	{(0x011f<<2), 0x00000000},
	{(0x0120<<2), 0x01000000},
	{(0x0121<<2), 0x01000000},
	{(0x0122<<2), 0x00000000},
	{(0x0123<<2), 0x3fffffff},
	{(0x0124<<2), 0x80000000},
	{(0x0125<<2), 0x00000000},
	{(0x0126<<2), 0x00000000},
	{(0x0127<<2), 0x00000000},
	{(0x0128<<2), 0x00000000},
	{(0x0129<<2), 0x00000000},
	{(0x012a<<2), 0x00000000},
	{(0x012b<<2), 0x00000000},
	{(0x012c<<2), 0x00000000},
	{(0x012d<<2), 0x00000000},
	{(0x012e<<2), 0x00000000},
	{(0x012f<<2), 0x00000000},
	{(0x0130<<2), 0x00000000},
	{(0x0131<<2), 0x00000000},
	{(0x0132<<2), 0x00000000},
	{(0x0133<<2), 0x00000000},
	{(0x0134<<2), 0x00000000},
	{(0x0135<<2), 0x00000000},
	{(0x0136<<2), 0x00000000},
	{(0x0137<<2), 0x00000000},
	{(0x0138<<2), 0x00000000},
	{(0x0139<<2), 0x00000000},
	{(0x013a<<2), 0x00000000},
	{(0x013b<<2), 0x00000000},
	{(0x013c<<2), 0x00000000},
	{(0x013d<<2), 0x00000000},
	{(0x013e<<2), 0x00000000},
	{(0x013f<<2), 0x00000000},
#endif
//DCAP_M5
#ifdef USE_REG_EXTRACTOR
	{(0x0140<<2), 0x00300000}, // Source-0 Interlaced C
	{(0x0141<<2), 0x00340000}, // Source-1 Interlaced C
	{(0x0142<<2), 0x00380000}, // Source-2 Interlaced C
	{(0x0143<<2), 0x003c0000}, // Source-3 Interlaced C
#endif
	{(0x0144<<2), 0x00000000},
	{(0x0145<<2), 0x00000000},
	{(0x0146<<2), 0x00000000},
	{(0x0147<<2), 0x00000000},
	{(0x0148<<2), 0x00000000},
	{(0x0149<<2), 0x00000000},
	{(0x014a<<2), 0x00000000},
	{(0x014b<<2), 0x00000000},
	{(0x014c<<2), 0x00000000},
	{(0x014d<<2), 0x001000f0}, // linebuf_level[27:16] and row_byte [15:0]
	{(0x014e<<2), 0xe0020040}, // line_num [15:0]
	{(0x014f<<2), 0x00000000},
	{(0x0150<<2), 0x40000401},
	{(0x0151<<2), 0x01000100}, // data width [15:0] and height [31:16]
	{(0x0152<<2), 0x00094480},
	{(0x0153<<2), 0x00000000},
	{(0x0154<<2), 0x00000000},
	{(0x0155<<2), 0x00000000},
	{(0x0156<<2), 0x00000000},
	{(0x0157<<2), 0x00000000},
	{(0x0158<<2), 0x00000000},
	{(0x0159<<2), 0x00000000},
	{(0x015a<<2), 0x00030003}, // [18:16],[2:0] : Data Format => 011: 8bit
	{(0x015b<<2), 0x001f01e1},
#ifdef USE_UNDESCRIPTION_REGS
	{(0x015c<<2), 0x00000c03},
	{(0x015d<<2), 0x00000000},
	{(0x015e<<2), 0x00000000},
	{(0x015f<<2), 0x00000000},
	{(0x0160<<2), 0x01000000},
	{(0x0161<<2), 0x01000000},
	{(0x0162<<2), 0x00000000},
	{(0x0163<<2), 0x3fffffff},
	{(0x0164<<2), 0x80000000},
	{(0x0165<<2), 0x00000000},
	{(0x0166<<2), 0x00000000},
	{(0x0167<<2), 0x00000000},
	{(0x0168<<2), 0x00000000},
	{(0x0169<<2), 0x00000000},
	{(0x016a<<2), 0x00000000},
	{(0x016b<<2), 0x00000000},
	{(0x016c<<2), 0x00000000},
	{(0x016d<<2), 0x00000000},
	{(0x016e<<2), 0x00000000},
	{(0x016f<<2), 0x00000000},
	{(0x0170<<2), 0x00000000},
	{(0x0171<<2), 0x00000000},
	{(0x0172<<2), 0x00000000},
	{(0x0173<<2), 0x00000000},
	{(0x0174<<2), 0x00000000},
	{(0x0175<<2), 0x00000000},
	{(0x0176<<2), 0x00000000},
	{(0x0177<<2), 0x00000000},
	{(0x0178<<2), 0x00000000},
	{(0x0179<<2), 0x00000000},
	{(0x017a<<2), 0x00000000},
	{(0x017b<<2), 0x00000000},
	{(0x017c<<2), 0x00000000},
	{(0x017d<<2), 0x00000000},
	{(0x017e<<2), 0x00000000},
	{(0x017f<<2), 0x00000000},
#endif
//DCAP_M6,
#ifdef USE_REG_EXTRACTOR
	{(0x0180<<2), 0x00100000}, // Source-0 Interlaced Y
	{(0x0181<<2), 0x00140000}, // Source-1 Interlaced Y
	{(0x0182<<2), 0x00180000}, // Source-2 Interlaced Y
	{(0x0183<<2), 0x001c0000}, // Source-3 Interlaced Y
#endif
	{(0x0184<<2), 0x00000000},
	{(0x0185<<2), 0x00000000},
	{(0x0186<<2), 0x00000000},
	{(0x0187<<2), 0x00000000},
	{(0x0188<<2), 0x00000000},
	{(0x0189<<2), 0x00000000},
	{(0x018a<<2), 0x00000000},
	{(0x018b<<2), 0x00000000},
	{(0x018c<<2), 0x00000000},
	{(0x018d<<2), 0x00100078}, // linebuf_level[27:16] and row_byte [15:0]
	{(0x018e<<2), 0xe0020080}, // line_num [15:0]
	{(0x018f<<2), 0x00000000},
	{(0x0190<<2), 0x40002401},
	{(0x0191<<2), 0x01000100}, // data width [15:0] and height [31:16]
	{(0x0192<<2), 0x00094480},
	{(0x0193<<2), 0x00000000},
	{(0x0194<<2), 0x00000000},
	{(0x0195<<2), 0x00000000},
	{(0x0196<<2), 0x00000000},
	{(0x0197<<2), 0x00000000},
	{(0x0198<<2), 0x00003d12},
	{(0x0199<<2), 0x00000000},
	{(0x019a<<2), 0x00030003}, // [18:16],[2:0] : Data Format => 011: 8bit
	{(0x019b<<2), 0x001f01e1},
#ifdef USE_UNDESCRIPTION_REGS
	{(0x019c<<2), 0x00000c03},
	{(0x019d<<2), 0x00000000},
	{(0x019e<<2), 0x00000000},
	{(0x019f<<2), 0x00000000},
	{(0x01a0<<2), 0x01000000},
	{(0x01a1<<2), 0x01000000},
	{(0x01a2<<2), 0x00000000},
	{(0x01a3<<2), 0x3fffffff},
	{(0x01a4<<2), 0x80000000},
	{(0x01a5<<2), 0x00000000},
	{(0x01a6<<2), 0x00000000},
	{(0x01a7<<2), 0x00000000},
	{(0x01a8<<2), 0x00000000},
	{(0x01a9<<2), 0x00000000},
	{(0x01aa<<2), 0x00000000},
	{(0x01ab<<2), 0x00000000},
	{(0x01ac<<2), 0x00000000},
	{(0x01ad<<2), 0x00000000},
	{(0x01ae<<2), 0x00000000},
	{(0x01af<<2), 0x00000000},
	{(0x01b0<<2), 0x00000000},
	{(0x01b1<<2), 0x00000000},
	{(0x01b2<<2), 0x00000000},
	{(0x01b3<<2), 0x00000000},
	{(0x01b4<<2), 0x00000000},
	{(0x01b5<<2), 0x00000000},
	{(0x01b6<<2), 0x00000000},
	{(0x01b7<<2), 0x00000000},
	{(0x01b8<<2), 0x00000000},
	{(0x01b9<<2), 0x00000000},
	{(0x01ba<<2), 0x00000000},
	{(0x01bb<<2), 0x00000000},
	{(0x01bc<<2), 0x00000000},
	{(0x01bd<<2), 0x00000000},
	{(0x01be<<2), 0x00000000},
	{(0x01bf<<2), 0x00000000},
#endif
//DCAP_M7
// below is not descripted in datasheet ?
	{(0x01c0<<2), 0x00000000},
	{(0x01c1<<2), 0x00000003},
	{(0x01c2<<2), 0x000000f0},
	{(0x01c3<<2), 0x01000000},
	{(0x01c4<<2), 0x01000000},
	{(0x01c5<<2), 0x00000000},
	{(0x01c6<<2), 0x3fffffff},
	{(0x01c7<<2), 0x00000000},
	{(0x01c8<<2), 0x00000000},
	{(0x01c9<<2), 0x004204f0},
	{(0x01ca<<2), 0x00000000},
	{(0x01cb<<2), 0x00000000},
	{(0x01cc<<2), 0x00000000},
	{(0x01cd<<2), 0x00000000},
	{(0x01ce<<2), 0x00000000},
	{(0x01cf<<2), 0x00000000},
	{(0x01d0<<2), 0x00ffffff},
	{(0x01d1<<2), 0x00000000},
	{(0x01d2<<2), 0x00000000},
	{(0x01d3<<2), 0x00000000},
	{(0x01d4<<2), 0x00000000},
	{(0x01d5<<2), 0x00000000},
	{(0x01d6<<2), 0x00000000},
	{(0x01d7<<2), 0x00000000},
	{(0x01d8<<2), 0x00000000},
	{(0x01d9<<2), 0x00000000},
	{(0x01da<<2), 0x00000000},
	{(0x01db<<2), 0x00000000},
	{(0x01dc<<2), 0x00000000},
	{(0x01dd<<2), 0x00000000},
	{(0x01de<<2), 0x00000000},
	{(0x01df<<2), 0x00000000},
	{(0x01e0<<2), 0x04000000},
	{(0x01e1<<2), 0x04000400},
	{(0x01e2<<2), 0x00000000},
	{(0x01e3<<2), 0x00000000},
	{(0x01e4<<2), 0x00000000},
	{(0x01e5<<2), 0x00000000},
	{(0x01e6<<2), 0x04000000},
	{(0x01e7<<2), 0x04000400},
	{(0x01e8<<2), 0x04000000},
	{(0x01e9<<2), 0x04000400},
	{(0x01ea<<2), 0x00000000},
	{(0x01eb<<2), 0x00000000},
	{(0x01ec<<2), 0x00000000},
	{(0x01ed<<2), 0x00000000},
	{(0x01ee<<2), 0x04000000},
	{(0x01ef<<2), 0x04000400},
	{(0x01f0<<2), 0x00000000},
	{(0x01f1<<2), 0x00000000},
	{(0x01f2<<2), 0x000001f0},
	{(0x01f3<<2), 0xffffffff},
	{(0x01f4<<2), 0x00000307},
	{(0x01f5<<2), 0x00000307},
	{(0x01f6<<2), 0x00000000},
	{(0x01f7<<2), 0x00000000},
	{(0x01f8<<2), 0x00000000},
	{(0x01f9<<2), 0x00000000},
	{(0x01fa<<2), 0x00000000},
	{(0x01fb<<2), 0x00000000},
	{(0x01fc<<2), 0x00000000},
	{(0x01fd<<2), 0x00000000},
	{(0x01fe<<2), 0x00000000},
	{(0x01ff<<2), 0x00000000},
// above is not descripted in datasheet ?	
//DCAP_M8
// below is not descripted in datasheet ?
	{(0x0200<<2), 0x00ff0100},
	{(0x0201<<2), 0x001c0100},
	{(0x0202<<2), 0x0001001c},
	{(0x0203<<2), 0x00000000},
	{(0x0204<<2), 0x01000100},
	{(0x0205<<2), 0x01000100},
	{(0x0206<<2), 0x01000100},
	{(0x0207<<2), 0x000b4000},
	{(0x0208<<2), 0x01000100},
	{(0x0209<<2), 0x000b4000},
// above is not descripted in datasheet ?
//DCAP_M8_PCLK
	{(0x020a<<2), 0x010c0002},
	{(0x020b<<2), 0x010c0002},
	{(0x020c<<2), 0x00000000},
	{(0x020d<<2), 0x00000000},
	{(0x020e<<2), 0x00000000},
	{(0x020f<<2), 0x00000000},
	{(0x0210<<2), 0x00050005},
	{(0x0211<<2), 0x01000100},
	{(0x0212<<2), 0x00130013},
	{(0x0213<<2), 0x01000100},
	{(0x0214<<2), 0x01000100},
	{(0x0215<<2), 0x00000002},
	{(0x0216<<2), 0x01000005},
	{(0x0217<<2), 0x01000013},
	{(0x0218<<2), 0x00000001},
	{(0x0219<<2), 0x00020002},
	{(0x021a<<2), 0x01000005},
	{(0x021b<<2), 0x00000000},
	{(0x021c<<2), 0x00000000},
	{(0x021d<<2), 0x00000000},
#ifdef USE_UNDESCRIPTION_REGS // ???????????  //0x874 ~ 0x8fc
	{(0x021e<<2), 0x00000000},
	{(0x021f<<2), 0x00000000},
	{(0x0220<<2), 0x00000000},
	{(0x0221<<2), 0x00000000},
	{(0x0222<<2), 0x00040001},
	{(0x0223<<2), 0x01000020},
	{(0x0224<<2), 0x01000006},
	{(0x0225<<2), 0x00040001},
	{(0x0226<<2), 0x01000020},
	{(0x0227<<2), 0x01000006},
	{(0x0228<<2), 0x00020000},
	{(0x0229<<2), 0x00033fff},
	{(0x022a<<2), 0x00034000},
	{(0x022b<<2), 0x0003dfff},
	{(0x022c<<2), 0x00000000},
	{(0x022d<<2), 0x000005ff},
	{(0x022e<<2), 0x00000600},
	{(0x022f<<2), 0x000009ff},
	{(0x0230<<2), 0x00000000},
	{(0x0231<<2), 0x00000000},
	{(0x0232<<2), 0x00010001},
	{(0x0233<<2), 0x00000000},
	{(0x0234<<2), 0x01000140},
	{(0x0235<<2), 0x00000060},
	{(0x0236<<2), 0x00000000},
	{(0x0237<<2), 0x00030020},
	{(0x0238<<2), 0x00000001},
	{(0x0239<<2), 0x00000040},
	{(0x023a<<2), 0x00000060},
	{(0x023b<<2), 0x00020020},
	{(0x023c<<2), 0x00000002},
	{(0x023d<<2), 0x00002000},
	{(0x023e<<2), 0x00003400},
	{(0x023f<<2), 0x00000014},
#endif
//M9
#ifdef USE_REG_EXTRACTOR
	{(0x0240<<2), 0x00300000}, // Source-0 Interlaced C
	{(0x0241<<2), 0x00340000}, // Source-1 Interlaced C
	{(0x0242<<2), 0x00380000}, // Source-2 Interlaced C
	{(0x0243<<2), 0x003c0000}, // Source-3 Interlaced C
#endif
	{(0x0244<<2), 0x00000000},
	{(0x0245<<2), 0x00000000},
	{(0x0246<<2), 0x00000000},
	{(0x0247<<2), 0x00000000},
	{(0x0248<<2), 0x00000000},
	{(0x0249<<2), 0x00000000},
	{(0x024a<<2), 0x00000000},
	{(0x024b<<2), 0x00000000},
	{(0x024c<<2), 0x00000000},
	{(0x024d<<2), 0x001000f0}, // linebuf_level[27:16] and row_byte [15:0]
	{(0x024e<<2), 0xe0040040}, // line_num [15:0]
	{(0x024f<<2), 0x00000000},
	{(0x0250<<2), 0x40002401},
	{(0x0251<<2), 0x01000100}, // data width [15:0] and height [31:16]
	{(0x0252<<2), 0x00094480},
	{(0x0253<<2), 0x00000000},
	{(0x0254<<2), 0x00000000},
	{(0x0255<<2), 0x00000000},
	{(0x0256<<2), 0x00000000},
	{(0x0257<<2), 0x00000000},
	{(0x0258<<2), 0x00000000},
	{(0x0259<<2), 0x00000000},
	{(0x025a<<2), 0x00030003}, // [18:16],[2:0] : Data Format => 011: 8bit
	{(0x025b<<2), 0x001f01e1},
#ifdef USE_UNDESCRIPTION_REGS
	{(0x025c<<2), 0x00000c03},
	{(0x025d<<2), 0x00000000},
	{(0x025e<<2), 0x00000000},
	{(0x025f<<2), 0x00000000},
	{(0x0260<<2), 0x01000000},
	{(0x0261<<2), 0x01000000},
	{(0x0262<<2), 0x00000000},
	{(0x0263<<2), 0x3fffffff},
	{(0x0264<<2), 0x80000000},
	{(0x0265<<2), 0x00000000},
	{(0x0266<<2), 0x00000000},
	{(0x0267<<2), 0x00000000},
	{(0x0268<<2), 0x00000000},
	{(0x0269<<2), 0x00000000},
	{(0x026a<<2), 0x00000000},
	{(0x026b<<2), 0x00000000},
	{(0x026c<<2), 0x00000000},
	{(0x026d<<2), 0x00000000},
	{(0x026e<<2), 0x00000000},
	{(0x026f<<2), 0x00000000},
	{(0x0270<<2), 0x00000000},
	{(0x0271<<2), 0x00000000},
	{(0x0272<<2), 0x00000000},
	{(0x0273<<2), 0x00000000},
	{(0x0274<<2), 0x00000000},
	{(0x0275<<2), 0x00000000},
	{(0x0276<<2), 0x00000000},
	{(0x0277<<2), 0x00000000},
	{(0x0278<<2), 0x00000000},
	{(0x0279<<2), 0x00000000},
	{(0x027a<<2), 0x00000000},
	{(0x027b<<2), 0x00000000},
	{(0x027c<<2), 0x00000000},
	{(0x027d<<2), 0x00000000},
	{(0x027e<<2), 0x00000000},
	{(0x027f<<2), 0x00000000},
#endif
	{(0x0000<<2), 0xffffffff},
	{(0x0001<<2), 0x0001ffff},
	{(0x0002<<2), 0x000a000a},
	{(0x0003<<2), 0x000a000a},
	{(0x0004<<2), 0x000a000a},
	{(0x0005<<2), 0x000a000a},
	{(0x0006<<2), 0x000000ff},
	{(0x0007<<2), 0x00ffffff},
	{(0x0008<<2), 0x00000068},
	{(0x0009<<2), 0x000007c6},
	{(0x000a<<2), 0x00000005},
	{(0x000b<<2), 0x03c303c3},
	{(0x000c<<2), 0x00000030},
	{(0x000d<<2), 0x00f00070},
	{(0x000e<<2), 0x01ffffff},
	{(0x000f<<2), 0x10c0010f},
	{(0x0010<<2), 0x02410481},
	{(0x0011<<2), 0x00062972}, // yuv420_mode[1] => 420:1, 422:0, progressive[0] => Interlace:0, Progressive:1
	{(0x0012<<2), 0x00000000},
	{(0x0013<<2), 0x00000000},
	{(0x0014<<2), 0x00000000},
	{(0x0015<<2), 0x00000000},
	{(0x0016<<2), 0x00040000},
	{(0x0017<<2), 0x00000000},
	{(0x0018<<2), 0x00000000},
	{(0x0019<<2), 0x00100000},
	{(0x001a<<2), 0x30000000},
	{(0x001b<<2), 0x10000000},
	{(0x001c<<2), 0x00000000},
	{(0x001d<<2), 0x00000000},
	{(0x001e<<2), 0x00000000},
	{(0x001f<<2), 0x00000000},
	{(0x0020<<2), 0x00000000},
	{(0x0021<<2), 0x00000000},
	{(0x0022<<2), 0x00000000},
	{(0x0023<<2), 0x00000000}
#ifdef USE_UNDESCRIPTION_REGS
	,{(0x0024<<2), 0x00000000},
	{(0x0025<<2), 0x00000000},
	{(0x0026<<2), 0x00000000},
	{(0x0027<<2), 0x00000000},
	{(0x0028<<2), 0x00000000},
	{(0x0029<<2), 0x00000000},
	{(0x002a<<2), 0x00000000},
	{(0x002b<<2), 0x00000000},
	{(0x002c<<2), 0x00000000},
	{(0x002d<<2), 0x00000000},
	{(0x002e<<2), 0x00000000},
	{(0x002f<<2), 0x00000000},
	{(0x0030<<2), 0x00000000},
	{(0x0031<<2), 0x00000000},
	{(0x0032<<2), 0x00000000},
	{(0x0033<<2), 0x00000000},
	{(0x0034<<2), 0x00000000},
	{(0x0035<<2), 0x00000000},
	{(0x0036<<2), 0x00000000},
	{(0x0037<<2), 0x00000000},
	{(0x0038<<2), 0x00000000},
	{(0x0039<<2), 0x00000000},
	{(0x003a<<2), 0x00000000},
	{(0x003b<<2), 0x00000000},
	{(0x003c<<2), 0x00000000},
	{(0x003d<<2), 0x00000000},
	{(0x003e<<2), 0x00000000},
	{(0x003f<<2), 0x00000000}
#endif
};

//CPU_CLK_VDEINT
stMADI_Info CPU_CLK_VDEINT_1[] = {
//VDEINT_M0
	{(0x0000<<2), 0x70f8f02b},
	{(0x0001<<2), 0x00080004},
	{(0x0002<<2), 0x00020010},
	{(0x0003<<2), 0x00000f0f},
	{(0x0004<<2), 0x00000000},
	{(0x0005<<2), 0x00000000},
	{(0x0006<<2), 0x80000501},
	{(0x0007<<2), 0x00000000},
	{(0x0008<<2), 0x00000000},
	{(0x0009<<2), 0x00000000},
	{(0x000a<<2), 0x00000000},
	{(0x000b<<2), 0x00000000},
	{(0x000c<<2), 0x00000000},
	{(0x000d<<2), 0x00033030},
	{(0x000e<<2), 0x00140106},
	{(0x000f<<2), 0x00140106},
	{(0x0018<<2), 0x00000f00},
	{(0x0019<<2), 0x00001f00},
	{(0x001a<<2), 0x00040064},
	{(0x001b<<2), 0x00040010},
	{(0x001c<<2), 0x00030100},
	{(0x001d<<2), 0x002a0100},
	{(0x001e<<2), 0x00000000},
	{(0x001f<<2), 0x00000000},
	{(0x0090<<2), 0xad2780a0},//0xad20002a},
	{(0x0091<<2), 0x2084e500},//0x2004e500},
	{(0x0092<<2), 0x0d002042},//0x0d002042},
	{(0x0093<<2), 0x2002588c},//0x75137a8c},
	{(0x0094<<2), 0x028220f7},//0x02d220f0},
	{(0x0095<<2), 0x00005038},//0x0140530d},
	{(0x0096<<2), 0x40a100d3},//0xf0a100d3},
	{(0x0097<<2), 0x10a3c0d3},//0x10a3c0d3},
	{(0x0098<<2), 0x01810302},//0x00e10302},
	{(0x0099<<2), 0x44004040},//0x04004040},
	{(0x009a<<2), 0x00103810},
	{(0x009b<<2), 0x006c33c0},
	{(0x009c<<2), 0x264d8960},
	{(0x009d<<2), 0x0048c993},
	{(0x009e<<2), 0x03219028},
	{(0x009f<<2), 0x0d0007d0},
	{(0x00a0<<2), 0x0002a990},
	{(0x00a1<<2), 0x00000000},//0x00000100},
	{(0x00a2<<2), 0x01000000},//0x62000100},
	{(0x00a3<<2), 0x005246c8},//0x7f1246c8},
	{(0x00a4<<2), 0x08000000},//0x0011aa04},
	{(0x00a5<<2), 0x00000000},
	{(0x0010<<2), 0x01000003},
	{(0x0011<<2), 0x00110011},
	{(0x0012<<2), 0x0011000f},
	{(0x0013<<2), 0x01000012},
	{(0x0014<<2), 0x03d4d460},//0x07d4d460},
	{(0x0015<<2), 0x81000001}, // 420[0] => 420:1
	{(0x0080<<2), 0x3113650c},//0x3113670c},
	{(0x0080<<2), 0x3113610d}//0x3113030d}
};

//CPU_CLK_VDEINT_LUT
stMADI_Info CPU_CLK_VDEINT_LUT[] = {
	{(0x0000<<2), 0x67880000},
	{(0x0001<<2), 0x34560000},
	{(0x0002<<2), 0x00120000},
	{(0x0003<<2), 0x00000000},
	{(0x0004<<2), 0x67880000},
	{(0x0005<<2), 0x34560000},
	{(0x0006<<2), 0x01120000},
	{(0x0007<<2), 0x00000000},
	{(0x0008<<2), 0x67880011},
	{(0x0009<<2), 0x34560000},
	{(0x000a<<2), 0x11220000},
	{(0x000b<<2), 0x00000000},
	{(0x000c<<2), 0x67881122},
	{(0x000d<<2), 0x34561111},
	{(0x000e<<2), 0x12231111},
	{(0x000f<<2), 0x00010000},
	{(0x0010<<2), 0x67882233},
	{(0x0011<<2), 0x45561222},
	{(0x0012<<2), 0x22331111},
	{(0x0013<<2), 0x00110001},
	{(0x0014<<2), 0x67883344},
	{(0x0015<<2), 0x45562233},
	{(0x0016<<2), 0x23341122},
	{(0x0017<<2), 0x00120001},
	{(0x0018<<2), 0x77884455},
	{(0x0019<<2), 0x55663344},
	{(0x001a<<2), 0x33442233},
	{(0x001b<<2), 0x01220011},
	{(0x001c<<2), 0x77885566},
	{(0x001d<<2), 0x55664444},
	{(0x001e<<2), 0x33443334},
	{(0x001f<<2), 0x01220012},
	{(0x0020<<2), 0x78885677},
	{(0x0021<<2), 0x55664555},
	{(0x0022<<2), 0x33443344},
	{(0x0023<<2), 0x01220012},
	{(0x0024<<2), 0x78886677},
	{(0x0025<<2), 0x56675566},
	{(0x0026<<2), 0x34453445},
	{(0x0027<<2), 0x01230123},
	{(0x0028<<2), 0x78887778},
	{(0x0029<<2), 0x56675666},
	{(0x002a<<2), 0x34453445},
	{(0x002b<<2), 0x01230123},
	{(0x002c<<2), 0x78887788},
	{(0x002d<<2), 0x66776667},
	{(0x002e<<2), 0x44554455},
	{(0x002f<<2), 0x01230123},
	{(0x0030<<2), 0x78887888},
	{(0x0031<<2), 0x66776677},
	{(0x0032<<2), 0x44554455},
	{(0x0033<<2), 0x01230123},
	{(0x0034<<2), 0x78887888},
	{(0x0035<<2), 0x67776777},
	{(0x0036<<2), 0x45564556},
	{(0x0037<<2), 0x01230123},
	{(0x0038<<2), 0x88888888},
	{(0x0039<<2), 0x67776777},
	{(0x003a<<2), 0x45564556},
	{(0x003b<<2), 0x01230123},
	{(0x003c<<2), 0x88888888},
	{(0x003d<<2), 0x77777777},
	{(0x003e<<2), 0x45664566},
	{(0x003f<<2), 0x01230123}
};

stMADI_Info CPU_CLK_VDEINT_2[] = {
	{(0x0080<<2), 0x3113610c},//0x3113030c},
//VDEINT_M4
	{(0x0100<<2), 0xff070100},
	{(0x0101<<2), 0x00000003}, // fb_format[2:0] => 8bit:3, 10bit:5
	{(0x0102<<2), 0x00000000},
	{(0x0103<<2), 0x00000000},
	{(0x0104<<2), 0x00000000},
	{(0x0105<<2), 0x00000000},
	{(0x0106<<2), 0x00000000},
	{(0x0107<<2), 0x00000000},
	{(0x0108<<2), 0x00000401},
	{(0x0109<<2), 0x00000000},
	{(0x010a<<2), 0x00004c80},
	{(0x010b<<2), 0x00000000},
	{(0x010c<<2), 0x00000000},
	{(0x010d<<2), 0x00000000},
	{(0x010e<<2), 0x00000000},
	{(0x010f<<2), 0x00000000},
#ifdef USE_REG_EXTRACTOR
	{(0x0110<<2), 0x00100000}, 	// 	Src-0 Y
	{(0x0111<<2), 0x00140000}, 	// 	Src-1 Y
	{(0x0112<<2), 0x00180000}, 	// 	Src-2 Y
	{(0x0113<<2), 0x001c0000}, 	// 	Src-3 Y
#endif
	{(0x0114<<2), 0x00000000},
	{(0x0115<<2), 0x00000000},
	{(0x0116<<2), 0x00000000},
	{(0x0117<<2), 0x00000000},
	{(0x0118<<2), 0x00000000},
	{(0x0119<<2), 0x00000000},
	{(0x011a<<2), 0x00000000},
	{(0x011b<<2), 0x00000000},
	{(0x011c<<2), 0x00000000},
	{(0x011d<<2), 0x00100078},	// linebuf_level[27:16] and row_byte [15:0]
	{(0x011e<<2), 0xe6020080},	// line_num [15:0]
	{(0x011f<<2), 0x00000000},
//VDEINT_M5
	{(0x0120<<2), 0xff0b0100},
	{(0x0121<<2), 0x00000003}, // fb_format[2:0] => 8bit:3, 10bit:5
	{(0x0122<<2), 0x00000003},
	{(0x0123<<2), 0x00000000},
	{(0x0124<<2), 0x00000000},
	{(0x0125<<2), 0x00000000},
	{(0x0126<<2), 0x00000000},
	{(0x0127<<2), 0x00000000},
	{(0x0128<<2), 0x00000401},
	{(0x0129<<2), 0x00000000},
	{(0x012a<<2), 0x00004c80},
	{(0x012b<<2), 0x00000000},
	{(0x012c<<2), 0x00000000},
	{(0x012d<<2), 0x00000000},
	{(0x012e<<2), 0x00000000},
	{(0x012f<<2), 0x00000000},
#ifdef USE_REG_EXTRACTOR
	{(0x0130<<2), 0x00300000}, 	// 	Src-0 C
	{(0x0131<<2), 0x00340000}, 	// 	Src-1 C
	{(0x0132<<2), 0x00380000}, 	// 	Src-2 C
	{(0x0133<<2), 0x003c0000}, 	// 	Src-3 C
#endif
	{(0x0134<<2), 0x00000000},
	{(0x0135<<2), 0x00000000},
	{(0x0136<<2), 0x00000000},
	{(0x0137<<2), 0x00000000},
	{(0x0138<<2), 0x00000000},
	{(0x0139<<2), 0x00000000},
	{(0x013a<<2), 0x00000000},
	{(0x013b<<2), 0x00000000},
	{(0x013c<<2), 0x00000000},
	{(0x013d<<2), 0x001000f0},	// linebuf_level[27:16] and row_byte [15:0]
	{(0x013e<<2), 0xe6020040},	// line_num [15:0]
	{(0x013f<<2), 0x00000000},
//VDEINT_M6
	{(0x0140<<2), 0xff070100},
	{(0x0141<<2), 0x00000003}, // fb_format[2:0] => 8bit:3, 10bit:5
	{(0x0142<<2), 0x00000003},
	{(0x0143<<2), 0x00000000},
	{(0x0144<<2), 0x00000000},
	{(0x0145<<2), 0x00000000},
	{(0x0146<<2), 0x00000000},
	{(0x0147<<2), 0x00000000},
	{(0x0148<<2), 0x00000401},
	{(0x0149<<2), 0x00000000},
	{(0x014a<<2), 0x00004c80},
	{(0x014b<<2), 0x00000000},
	{(0x014c<<2), 0x00000000},
	{(0x014d<<2), 0x00000000},
	{(0x014e<<2), 0x00000000},
	{(0x014f<<2), 0x00000000},
#ifdef USE_REG_EXTRACTOR
	{(0x0150<<2), 0x00100000}, 	// 	Src-0 Y
	{(0x0151<<2), 0x00140000}, 	// 	Src-1 Y
	{(0x0152<<2), 0x00180000}, 	// 	Src-2 Y
	{(0x0153<<2), 0x001c0000}, 	// 	Src-3 Y
#endif
	{(0x0154<<2), 0x00000000},
	{(0x0155<<2), 0x00000000},
	{(0x0156<<2), 0x00000000},
	{(0x0157<<2), 0x00000000},
	{(0x0158<<2), 0x00000000},
	{(0x0159<<2), 0x00000000},
	{(0x015a<<2), 0x00000000},
	{(0x015b<<2), 0x00000000},
	{(0x015c<<2), 0x00000000},
	{(0x015d<<2), 0x00100078},	// linebuf_level[27:16] and row_byte [15:0]
	{(0x015e<<2), 0xe6020080},	// line_num [15:0]
	{(0x015f<<2), 0x00000000},
//VDEINT_M7
	{(0x0160<<2), 0xff070100},
	{(0x0161<<2), 0x00000001}, // fb_format[2:0] => 1bit:1, other:not-used
	{(0x0162<<2), 0x00000000},
	{(0x0163<<2), 0x00000000},
	{(0x0164<<2), 0x00000000},
	{(0x0165<<2), 0x00000000},
	{(0x0166<<2), 0x00000000},
	{(0x0167<<2), 0x00000000},
	{(0x0168<<2), 0x10000401},
	{(0x0169<<2), 0x00000000},
	{(0x016a<<2), 0x00004c80},
	{(0x016b<<2), 0x00000000},
	{(0x016c<<2), 0x00000000},
	{(0x016d<<2), 0x00000000},
	{(0x016e<<2), 0x00000000},
	{(0x016f<<2), 0x00000000},
#ifdef USE_REG_EXTRACTOR
	{(0x0170<<2), 0x00500000}, 	// 	Alpha-0
	{(0x0171<<2), 0x00500800}, 	// 	Alpha-1
	{(0x0172<<2), 0x00501000}, 	// 	Alpha-2
	{(0x0173<<2), 0x00501800}, 	// 	Alpha-3
#endif
	{(0x0174<<2), 0x00000000},
	{(0x0175<<2), 0x00000000},
	{(0x0176<<2), 0x00000000},
	{(0x0177<<2), 0x00000000},
	{(0x0178<<2), 0x00000000},
	{(0x0179<<2), 0x00000000},
	{(0x017a<<2), 0x00000000},
	{(0x017b<<2), 0x00000000},
	{(0x017c<<2), 0x00000000},
	{(0x017d<<2), 0x00020004},	// linebuf_level[27:16] and row_byte [15:0]
	{(0x017e<<2), 0xe6020080},	// line_num [15:0]
	{(0x017f<<2), 0x00040000},
//VDEINT_M8
	{(0x0180<<2), 0xff070100},
	{(0x0181<<2), 0x00000001},
	{(0x0182<<2), 0x00000000},
	{(0x0183<<2), 0x00000000},
	{(0x0184<<2), 0x00000000},
	{(0x0185<<2), 0x00000000},
	{(0x0186<<2), 0x00000000},
	{(0x0187<<2), 0x00000000},
	{(0x0188<<2), 0x10000401},
	{(0x0189<<2), 0x00000000},
	{(0x018a<<2), 0x00004c80},
	{(0x018b<<2), 0x00000000},
	{(0x018c<<2), 0x00000000},
	{(0x018d<<2), 0x00000000},
	{(0x018e<<2), 0x00000000},
	{(0x018f<<2), 0x00000000},
#ifdef USE_REG_EXTRACTOR
	{(0x0190<<2), 0x00500000}, 	// 	Alpha-0
	{(0x0191<<2), 0x00500800}, 	// 	Alpha-1
	{(0x0192<<2), 0x00501000}, 	// 	Alpha-2
	{(0x0193<<2), 0x00501800}, 	// 	Alpha-3
#endif
	{(0x0194<<2), 0x00000000},
	{(0x0195<<2), 0x00000000},
	{(0x0196<<2), 0x00000000},
	{(0x0197<<2), 0x00000000},
	{(0x0198<<2), 0x00000000},
	{(0x0199<<2), 0x00000000},
	{(0x019a<<2), 0x00000000},
	{(0x019b<<2), 0x00000000},
	{(0x019c<<2), 0x00000000},
	{(0x019d<<2), 0x00020004},	// linebuf_level[27:16] and row_byte [15:0]
	{(0x019e<<2), 0xe6020080},	// line_num [15:0]
	{(0x019f<<2), 0x00040000},
//VDEINT_NORMAL
	{(0x0090<<2), 0xad2780a0},//0xad20002a},
	{(0x0091<<2), 0x2084e500},//0x2004e500},
	{(0x0092<<2), 0x0d002042},
	{(0x0093<<2), 0x2002588c},//0x75137a8c},
	{(0x0094<<2), 0x028220f7},//0x02d220f0},
	{(0x0095<<2), 0x00005038},//0x0140530d},
	{(0x0096<<2), 0x40a100d3},//0xf0a100d3},
	{(0x0097<<2), 0x10a3c0d3},
	{(0x0098<<2), 0x01810302},//0x00e10302},
	{(0x0099<<2), 0x44004040},//0x04004040},
	{(0x009a<<2), 0x00103810},
	{(0x009b<<2), 0x006c33c0},
	{(0x009c<<2), 0x264d8960},
	{(0x009d<<2), 0x0048c993},
	{(0x009e<<2), 0x03219028},
	{(0x009f<<2), 0x0d0007d0},
	{(0x00a0<<2), 0x0002a990},
	{(0x00a1<<2), 0x00000100},//0x00000100},
	{(0x00a2<<2), 0x01000000},//0x62000100},
	{(0x00a3<<2), 0x005246c8},//0x7f1246c8},
	{(0x00a4<<2), 0x08000000},//0x0011aa04},
	{(0x00a5<<2), 0x00000000},
	{(0x0010<<2), 0x04380003},//0x01000003},
	{(0x0011<<2), 0x00110011},
	{(0x0012<<2), 0x0011000f},
	{(0x0013<<2), 0x07800012},//0x01000012},
	{(0x0014<<2), 0x03d4d460},//0x07d4d460},
	{(0x0015<<2), 0x81000001},
	{(0x0080<<2), 0x3113650c},//0x3113670c},
	{(0x00b0<<2), 0x00008e01},
	{(0x00b1<<2), 0x00000000},
	{(0x00b2<<2), 0x00000000},
	{(0x00b3<<2), 0x00000000},
	{(0x00b4<<2), 0x00000000},
	{(0x00b5<<2), 0x00000000},
	{(0x00b6<<2), 0x00000000},
	{(0x00b7<<2), 0x00000000},
	{(0x00b8<<2), 0x00000000},
	{(0x00b9<<2), 0x00000000},
	{(0x00ba<<2), 0x00002001},
	{(0x00bb<<2), 0x0043477e},//0x000fc0fe},
	{(0x00bc<<2), 0x00002001},
	{(0x00bd<<2), 0x0043477e},//0x000fc0fe},
	{(0x00be<<2), 0x00000000},
	{(0x00bf<<2), 0x40000000},
	{(0x00c0<<2), 0x00000000},
	{(0x00c1<<2), 0x01244000},
	{(0x00c2<<2), 0x00000000},
	{(0x00c3<<2), 0x00000000},
	{(0x00c4<<2), 0x00000000},
	{(0x00c5<<2), 0x00000100},
	{(0x00c6<<2), 0x0000277e},//0x000020fe},
	{(0x00c7<<2), 0x0000021a},//0x0000007e},
	{(0x00c8<<2), 0x00000000},
	{(0x00c9<<2), 0x00000000},
	{(0x00ca<<2), 0x00000000},
	{(0x00cb<<2), 0x00000000},
	{(0x00cc<<2), 0x00000000},
	{(0x00cd<<2), 0x00000000},
	{(0x00ce<<2), 0x00000000},
	{(0x00cf<<2), 0x00000000},
//VDEINT_M9
	{(0x01a0<<2), 0x090f0100},
	{(0x01a1<<2), 0x00000003}, // fb_format_c[2:0] => 8bit:3, 10bit:5
	{(0x01a2<<2), 0x00000000},
	{(0x01a3<<2), 0x00000003},
	{(0x01a4<<2), 0x00000000},
	{(0x01a5<<2), 0x00000000},
	{(0x01a6<<2), 0x00000001},
	{(0x01a7<<2), 0x00000000},
	{(0x01a8<<2), 0x30000401}, // fb_format_psu[30:28] => 8bit:3, 10bit:5
	{(0x01a9<<2), 0x01000100},
	{(0x01aa<<2), 0x00000000},
	{(0x01ab<<2), 0x00000000},
	{(0x01ac<<2), 0x00000000},
	{(0x01ad<<2), 0x00000000},
	{(0x01ae<<2), 0x00000000},
	{(0x01af<<2), 0x00000000},
#ifdef USE_REG_EXTRACTOR
	{(0x01b0<<2), 0x00800000}, // Target Yo-0 address
	{(0x01b1<<2), 0x00840000}, // Target Yo-1 address
	{(0x01b2<<2), 0x00880000}, // Target Yo-2 address
	{(0x01b3<<2), 0x008c0000}, // Target Yo-3 address
#endif
	{(0x01b4<<2), 0x00000000},
	{(0x01b5<<2), 0x00000000},
	{(0x01b6<<2), 0x00000000},
	{(0x01b7<<2), 0x00000000},
	{(0x01b8<<2), 0x00000000},
	{(0x01b9<<2), 0x00000000},
	{(0x01ba<<2), 0x00000000},
	{(0x01bb<<2), 0x00000000},
	{(0x01bc<<2), 0x00000000},
	{(0x01bd<<2), 0xc0100010}, // linebuf_level[27:16] and row_byte [15:0]
	{(0x01be<<2), 0xe6040100}, // line_num [15:0]
	{(0x01bf<<2), 0x00100000},
//VDEINT_M9-1
#ifdef USE_REG_EXTRACTOR
	{(0x01c0<<2), 0x00c00000}, // Target Co-0 address
	{(0x01c1<<2), 0x00c40000}, // Target Co-1 address
	{(0x01c2<<2), 0x00c80000}, // Target Co-2 address
	{(0x01c3<<2), 0x00cc0000}, // Target Co-3 address
#endif
	{(0x01c4<<2), 0x00000000},
	{(0x01c5<<2), 0x00000000},
	{(0x01c6<<2), 0x00000000},
	{(0x01c7<<2), 0x00000000},
	{(0x01c8<<2), 0x00000000},
	{(0x01c9<<2), 0x00000000},
	{(0x01ca<<2), 0x00000000},
	{(0x01cb<<2), 0x00000000},
	{(0x01cc<<2), 0x00000000},
	{(0x01cd<<2), 0xc0100010}, // linebuf_level[27:16] and row_byte [15:0]
	{(0x01ce<<2), 0xe6040100}, // line_num [15:0]
	{(0x01cf<<2), 0x00100000},
//VDEINT_MA
	{(0x01d0<<2), 0x090f0100},
	{(0x01d1<<2), 0x00000001}, // fb_format[2:0] => 1bit:1, other:not-used
	{(0x01d2<<2), 0x00000000},
	{(0x01d3<<2), 0x00000000},
	{(0x01d4<<2), 0x00000000},
	{(0x01d5<<2), 0x00000000},
	{(0x01d6<<2), 0x00000001},
	{(0x01d7<<2), 0x00000000},
	{(0x01d8<<2), 0x00000401}, // fb_format[30:28] => 1bit:1, other:not-used
	{(0x01d9<<2), 0x01000100},
	{(0x01da<<2), 0x00000000},
	{(0x01db<<2), 0x00000000},
	{(0x01dc<<2), 0x00000000},
	{(0x01dd<<2), 0x00000000},
	{(0x01de<<2), 0x00000000},
	{(0x01df<<2), 0x00000000},
#ifdef USE_REG_EXTRACTOR
	{(0x01e0<<2), 0x00500000}, // Target alpha-0 address
	{(0x01e1<<2), 0x00500800}, // Target alpha-1 address
	{(0x01e2<<2), 0x00501000}, // Target alpha-2 address
	{(0x01e3<<2), 0x00501800}, // Target alpha-3 address
#endif
	{(0x01e4<<2), 0x00000000},
	{(0x01e5<<2), 0x00000000},
	{(0x01e6<<2), 0x00000000},
	{(0x01e7<<2), 0x00000000},
	{(0x01e8<<2), 0x00000000},
	{(0x01e9<<2), 0x00000000},
	{(0x01ea<<2), 0x00000000},
	{(0x01eb<<2), 0x00000000},
	{(0x01ec<<2), 0x00000000},
	{(0x01ed<<2), 0x40020002}, // linebuf_level[27:16] and row_byte [15:0]
	{(0x01ee<<2), 0xe6040100}, // line_num [15:0]
	{(0x01ef<<2), 0x00000000}
};
#endif

