/*
 * Copyright (C) Telechips Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see the file COPYING, or write
 * to the Free Software Foundation, Inc.,
 * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */
#ifndef __VIOC_V_DV_CFG_H__
#define	__VIOC_V_DV_CFG_H__

/*
 * Register offset
 */
#define OSD0_DLY_H		(0x00)
#define OSD0_DLY_V		(0x04)
#define OSD1_DLY_H		(0x08)
#define OSD1_DLY_V		(0x0C)
#define TX_INV			(0x10)
#define INT_EN			(0x20)
#define INT_PEND		(0x24)
#define INT_CLR			(0x28)
#define INT_STS			(0x2C)
#define RAW_STS			(0x30)

/*
 * TX Inverse Register
 */
#define TX_INV_DE_SHIFT		(2)
#define TX_INV_HS_SHIFT		(1)
#define TX_INV_VS_SHIFT		(0)

#define TX_INV_DE_MASK		(0x1 << TX_INV_DE_SHIFT)
#define TX_INV_HS_MASK		(0x1 << TX_INV_HS_SHIFT)
#define TX_INV_VS_MASK		(0x1 << TX_INV_VS_SHIFT)

/*
 * Interrupt Enable Register
 */
#define INT_EN_R_EDR_VS_SHIFT		(31)
#define INT_EN_R_EDR_HS_SHIFT		(30)
#define INT_EN_R_EDR_VE_SHIFT		(29)
#define INT_EN_R_EDR_HE_SHIFT		(28)
#define INT_EN_R_OSD0_VS_SHIFT		(27)
#define INT_EN_R_OSD0_HS_SHIFT		(26)
#define INT_EN_R_OSD0_VE_SHIFT		(25)
#define INT_EN_R_OSD0_HE_SHIFT		(24)
#define INT_EN_R_OSD1_VS_SHIFT		(23)
#define INT_EN_R_OSD1_HS_SHIFT		(22)
#define INT_EN_R_OSD1_VE_SHIFT		(21)
#define INT_EN_R_OSD1_HE_SHIFT		(20)
#define INT_EN_R_TX_VS_SHIFT		(19)
#define INT_EN_R_TX_HS_SHIFT		(18)
#define INT_EN_R_TX_VE_SHIFT		(17)
#define INT_EN_R_TX_HE_SHIFT		(16)
#define INT_EN_F_EDR_VS_SHIFT		(15)
#define INT_EN_F_EDR_HS_SHIFT		(14)
#define INT_EN_F_EDR_VE_SHIFT		(13)
#define INT_EN_F_EDR_HE_SHIFT		(12)
#define INT_EN_F_OSD0_VS_SHIFT		(11)
#define INT_EN_F_OSD0_HS_SHIFT		(10)
#define INT_EN_F_OSD0_VE_SHIFT		(9)
#define INT_EN_F_OSD0_HE_SHIFT		(8)
#define INT_EN_F_OSD1_VS_SHIFT		(7)
#define INT_EN_F_OSD1_HS_SHIFT		(6)
#define INT_EN_F_OSD1_VE_SHIFT		(5)
#define INT_EN_F_OSD1_HE_SHIFT		(4)
#define INT_EN_F_TX_VS_SHIFT		(3)
#define INT_EN_F_TX_HS_SHIFT		(2)
#define INT_EN_F_TX_VE_SHIFT		(1)
#define INT_EN_F_TX_HE_SHIFT		(0)

#define INT_EN_R_EDR_VS_MASK		(0x1 << INT_EN_R_EDR_VS_SHIFT)
#define INT_EN_R_EDR_HS_MASK		(0x1 << INT_EN_R_EDR_HS_SHIFT)
#define INT_EN_R_EDR_VE_MASK		(0x1 << INT_EN_R_EDR_VE_SHIFT)
#define INT_EN_R_EDR_HE_MASK		(0x1 << INT_EN_R_EDR_HE_SHIFT)
#define INT_EN_R_OSD0_VS_MASK		(0x1 << INT_EN_R_OSD0_VS_SHIFT)
#define INT_EN_R_OSD0_HS_MASK		(0x1 << INT_EN_R_OSD0_HS_SHIFT)
#define INT_EN_R_OSD0_VE_MASK		(0x1 << INT_EN_R_OSD0_VE_SHIFT)
#define INT_EN_R_OSD0_HE_MASK		(0x1 << INT_EN_R_OSD0_HE_SHIFT)
#define INT_EN_R_OSD1_VS_MASK		(0x1 << INT_EN_R_OSD1_VS_SHIFT)
#define INT_EN_R_OSD1_HS_MASK		(0x1 << INT_EN_R_OSD1_HS_SHIFT)
#define INT_EN_R_OSD1_VE_MASK		(0x1 << INT_EN_R_OSD1_VE_SHIFT)
#define INT_EN_R_OSD1_HE_MASK		(0x1 << INT_EN_R_OSD1_HE_SHIFT)
#define INT_EN_R_TX_VS_MASK			(0x1 << INT_EN_R_TX_VS_SHIFT)
#define INT_EN_R_TX_HS_MASK			(0x1 << INT_EN_R_TX_HS_SHIFT)
#define INT_EN_R_TX_VE_MASK			(0x1 << INT_EN_R_TX_VE_SHIFT)
#define INT_EN_R_TX_HE_MASK			(0x1 << INT_EN_R_TX_HE_SHIFT)
#define INT_EN_F_EDR_VS_MASK		(0x1 << INT_EN_F_EDR_VS_SHIFT)
#define INT_EN_F_EDR_HS_MASK		(0x1 << INT_EN_F_EDR_HS_SHIFT)
#define INT_EN_F_EDR_VE_MASK		(0x1 << INT_EN_F_EDR_VE_SHIFT)
#define INT_EN_F_EDR_HE_MASK		(0x1 << INT_EN_F_EDR_HE_SHIFT)
#define INT_EN_F_OSD0_VS_MASK		(0x1 << INT_EN_F_OSD0_VS_SHIFT)
#define INT_EN_F_OSD0_HS_MASK		(0x1 << INT_EN_F_OSD0_HS_SHIFT)
#define INT_EN_F_OSD0_VE_MASK		(0x1 << INT_EN_F_OSD0_VE_SHIFT)
#define INT_EN_F_OSD0_HE_MASK		(0x1 << INT_EN_F_OSD0_HE_SHIFT)
#define INT_EN_F_OSD1_VS_MASK		(0x1 << INT_EN_F_OSD1_VS_SHIFT)
#define INT_EN_F_OSD1_HS_MASK		(0x1 << INT_EN_F_OSD1_HS_SHIFT)
#define INT_EN_F_OSD1_VE_MASK		(0x1 << INT_EN_F_OSD1_VE_SHIFT)
#define INT_EN_F_OSD1_HE_MASK		(0x1 << INT_EN_F_OSD1_HE_SHIFT)
#define INT_EN_F_TX_VS_MASK			(0x1 << INT_EN_F_TX_VS_SHIFT)
#define INT_EN_F_TX_HS_MASK			(0x1 << INT_EN_F_TX_HS_SHIFT)
#define INT_EN_F_TX_VE_MASK			(0x1 << INT_EN_F_TX_VE_SHIFT)
#define INT_EN_F_TX_HE_MASK			(0x1 << INT_EN_F_TX_HE_SHIFT)

/*
 * Interrupt Pending Register
 */
#define INT_PEND_R_EDR_VS_SHIFT		(31)
#define INT_PEND_R_EDR_HS_SHIFT		(30)
#define INT_PEND_R_EDR_VE_SHIFT		(29)
#define INT_PEND_R_EDR_HE_SHIFT		(28)
#define INT_PEND_R_OSD0_VS_SHIFT	(27)
#define INT_PEND_R_OSD0_HS_SHIFT	(26)
#define INT_PEND_R_OSD0_VE_SHIFT	(25)
#define INT_PEND_R_OSD0_HE_SHIFT	(24)
#define INT_PEND_R_OSD1_VS_SHIFT	(23)
#define INT_PEND_R_OSD1_HS_SHIFT	(22)
#define INT_PEND_R_OSD1_VE_SHIFT	(21)
#define INT_PEND_R_OSD1_HE_SHIFT	(20)
#define INT_PEND_R_TX_VS_SHIFT		(19)
#define INT_PEND_R_TX_HS_SHIFT		(18)
#define INT_PEND_R_TX_VE_SHIFT		(17)
#define INT_PEND_R_TX_HE_SHIFT		(16)
#define INT_PEND_F_EDR_VS_SHIFT		(15)
#define INT_PEND_F_EDR_HS_SHIFT		(14)
#define INT_PEND_F_EDR_VE_SHIFT		(13)
#define INT_PEND_F_EDR_HE_SHIFT		(12)
#define INT_PEND_F_OSD0_VS_SHIFT	(11)
#define INT_PEND_F_OSD0_HS_SHIFT	(10)
#define INT_PEND_F_OSD0_VE_SHIFT	(9)
#define INT_PEND_F_OSD0_HE_SHIFT	(8)
#define INT_PEND_F_OSD1_VS_SHIFT	(7)
#define INT_PEND_F_OSD1_HS_SHIFT	(6)
#define INT_PEND_F_OSD1_VE_SHIFT	(5)
#define INT_PEND_F_OSD1_HE_SHIFT	(4)
#define INT_PEND_F_TX_VS_SHIFT		(3)
#define INT_PEND_F_TX_HS_SHIFT		(2)
#define INT_PEND_F_TX_VE_SHIFT		(1)
#define INT_PEND_F_TX_HE_SHIFT		(0)

#define INT_PEND_R_EDR_VS_MASK		(0x1 << INT_PEND_R_EDR_VS_SHIFT)
#define INT_PEND_R_EDR_HS_MASK		(0x1 << INT_PEND_R_EDR_HS_SHIFT)
#define INT_PEND_R_EDR_VE_MASK		(0x1 << INT_PEND_R_EDR_VE_SHIFT)
#define INT_PEND_R_EDR_HE_MASK		(0x1 << INT_PEND_R_EDR_HE_SHIFT)
#define INT_PEND_R_OSD0_VS_MASK		(0x1 << INT_PEND_R_OSD0_VS_SHIFT)
#define INT_PEND_R_OSD0_HS_MASK		(0x1 << INT_PEND_R_OSD0_HS_SHIFT)
#define INT_PEND_R_OSD0_VE_MASK		(0x1 << INT_PEND_R_OSD0_VE_SHIFT)
#define INT_PEND_R_OSD0_HE_MASK		(0x1 << INT_PEND_R_OSD0_HE_SHIFT)
#define INT_PEND_R_OSD1_VS_MASK		(0x1 << INT_PEND_R_OSD1_VS_SHIFT)
#define INT_PEND_R_OSD1_HS_MASK		(0x1 << INT_PEND_R_OSD1_HS_SHIFT)
#define INT_PEND_R_OSD1_VE_MASK		(0x1 << INT_PEND_R_OSD1_VE_SHIFT)
#define INT_PEND_R_OSD1_HE_MASK		(0x1 << INT_PEND_R_OSD1_HE_SHIFT)
#define INT_PEND_R_TX_VS_MASK		(0x1 << INT_PEND_R_TX_VS_SHIFT)
#define INT_PEND_R_TX_HS_MASK		(0x1 << INT_PEND_R_TX_HS_SHIFT)
#define INT_PEND_R_TX_VE_MASK		(0x1 << INT_PEND_R_TX_VE_SHIFT)
#define INT_PEND_R_TX_HE_MASK		(0x1 << INT_PEND_R_TX_HE_SHIFT)
#define INT_PEND_F_EDR_VS_MASK		(0x1 << INT_PEND_F_EDR_VS_SHIFT)
#define INT_PEND_F_EDR_HS_MASK		(0x1 << INT_PEND_F_EDR_HS_SHIFT)
#define INT_PEND_F_EDR_VE_MASK		(0x1 << INT_PEND_F_EDR_VE_SHIFT)
#define INT_PEND_F_EDR_HE_MASK		(0x1 << INT_PEND_F_EDR_HE_SHIFT)
#define INT_PEND_F_OSD0_VS_MASK		(0x1 << INT_PEND_F_OSD0_VS_SHIFT)
#define INT_PEND_F_OSD0_HS_MASK		(0x1 << INT_PEND_F_OSD0_HS_SHIFT)
#define INT_PEND_F_OSD0_VE_MASK		(0x1 << INT_PEND_F_OSD0_VE_SHIFT)
#define INT_PEND_F_OSD0_HE_MASK		(0x1 << INT_PEND_F_OSD0_HE_SHIFT)
#define INT_PEND_F_OSD1_VS_MASK		(0x1 << INT_PEND_F_OSD1_VS_SHIFT)
#define INT_PEND_F_OSD1_HS_MASK		(0x1 << INT_PEND_F_OSD1_HS_SHIFT)
#define INT_PEND_F_OSD1_VE_MASK		(0x1 << INT_PEND_F_OSD1_VE_SHIFT)
#define INT_PEND_F_OSD1_HE_MASK		(0x1 << INT_PEND_F_OSD1_HE_SHIFT)
#define INT_PEND_F_TX_VS_MASK		(0x1 << INT_PEND_F_TX_VS_SHIFT)
#define INT_PEND_F_TX_HS_MASK		(0x1 << INT_PEND_F_TX_HS_SHIFT)
#define INT_PEND_F_TX_VE_MASK		(0x1 << INT_PEND_F_TX_VE_SHIFT)
#define INT_PEND_F_TX_HE_MASK		(0x1 << INT_PEND_F_TX_HE_SHIFT)

/*
 * Interrupt Clear Register
 */
#define INT_CLR_R_EDR_VS_SHIFT		(31)
#define INT_CLR_R_EDR_HS_SHIFT		(30)
#define INT_CLR_R_EDR_VE_SHIFT		(29)
#define INT_CLR_R_EDR_HE_SHIFT		(28)
#define INT_CLR_R_OSD0_VS_SHIFT		(27)
#define INT_CLR_R_OSD0_HS_SHIFT		(26)
#define INT_CLR_R_OSD0_VE_SHIFT		(25)
#define INT_CLR_R_OSD0_HE_SHIFT		(24)
#define INT_CLR_R_OSD1_VS_SHIFT		(23)
#define INT_CLR_R_OSD1_HS_SHIFT		(22)
#define INT_CLR_R_OSD1_VE_SHIFT		(21)
#define INT_CLR_R_OSD1_HE_SHIFT		(20)
#define INT_CLR_R_TX_VS_SHIFT		(19)
#define INT_CLR_R_TX_HS_SHIFT		(18)
#define INT_CLR_R_TX_VE_SHIFT		(17)
#define INT_CLR_R_TX_HE_SHIFT		(16)
#define INT_CLR_F_EDR_VS_SHIFT		(15)
#define INT_CLR_F_EDR_HS_SHIFT		(14)
#define INT_CLR_F_EDR_VE_SHIFT		(13)
#define INT_CLR_F_EDR_HE_SHIFT		(12)
#define INT_CLR_F_OSD0_VS_SHIFT		(11)
#define INT_CLR_F_OSD0_HS_SHIFT		(10)
#define INT_CLR_F_OSD0_VE_SHIFT		(9)
#define INT_CLR_F_OSD0_HE_SHIFT		(8)
#define INT_CLR_F_OSD1_VS_SHIFT		(7)
#define INT_CLR_F_OSD1_HS_SHIFT		(6)
#define INT_CLR_F_OSD1_VE_SHIFT		(5)
#define INT_CLR_F_OSD1_HE_SHIFT		(4)
#define INT_CLR_F_TX_VS_SHIFT		(3)
#define INT_CLR_F_TX_HS_SHIFT		(2)
#define INT_CLR_F_TX_VE_SHIFT		(1)
#define INT_CLR_F_TX_HE_SHIFT		(0)

#define INT_CLR_R_EDR_VS_MASK		(0x1 << INT_CLR_R_EDR_VS_SHIFT)
#define INT_CLR_R_EDR_HS_MASK		(0x1 << INT_CLR_R_EDR_HS_SHIFT)
#define INT_CLR_R_EDR_VE_MASK		(0x1 << INT_CLR_R_EDR_VE_SHIFT)
#define INT_CLR_R_EDR_HE_MASK		(0x1 << INT_CLR_R_EDR_HE_SHIFT)
#define INT_CLR_R_OSD0_VS_MASK		(0x1 << INT_CLR_R_OSD0_VS_SHIFT)
#define INT_CLR_R_OSD0_HS_MASK		(0x1 << INT_CLR_R_OSD0_HS_SHIFT)
#define INT_CLR_R_OSD0_VE_MASK		(0x1 << INT_CLR_R_OSD0_VE_SHIFT)
#define INT_CLR_R_OSD0_HE_MASK		(0x1 << INT_CLR_R_OSD0_HE_SHIFT)
#define INT_CLR_R_OSD1_VS_MASK		(0x1 << INT_CLR_R_OSD1_VS_SHIFT)
#define INT_CLR_R_OSD1_HS_MASK		(0x1 << INT_CLR_R_OSD1_HS_SHIFT)
#define INT_CLR_R_OSD1_VE_MASK		(0x1 << INT_CLR_R_OSD1_VE_SHIFT)
#define INT_CLR_R_OSD1_HE_MASK		(0x1 << INT_CLR_R_OSD1_HE_SHIFT)
#define INT_CLR_R_TX_VS_MASK		(0x1 << INT_CLR_R_TX_VS_SHIFT)
#define INT_CLR_R_TX_HS_MASK		(0x1 << INT_CLR_R_TX_HS_SHIFT)
#define INT_CLR_R_TX_VE_MASK		(0x1 << INT_CLR_R_TX_VE_SHIFT)
#define INT_CLR_R_TX_HE_MASK		(0x1 << INT_CLR_R_TX_HE_SHIFT)
#define INT_CLR_F_EDR_VS_MASK		(0x1 << INT_CLR_F_EDR_VS_SHIFT)
#define INT_CLR_F_EDR_HS_MASK		(0x1 << INT_CLR_F_EDR_HS_SHIFT)
#define INT_CLR_F_EDR_VE_MASK		(0x1 << INT_CLR_F_EDR_VE_SHIFT)
#define INT_CLR_F_EDR_HE_MASK		(0x1 << INT_CLR_F_EDR_HE_SHIFT)
#define INT_CLR_F_OSD0_VS_MASK		(0x1 << INT_CLR_F_OSD0_VS_SHIFT)
#define INT_CLR_F_OSD0_HS_MASK		(0x1 << INT_CLR_F_OSD0_HS_SHIFT)
#define INT_CLR_F_OSD0_VE_MASK		(0x1 << INT_CLR_F_OSD0_VE_SHIFT)
#define INT_CLR_F_OSD0_HE_MASK		(0x1 << INT_CLR_F_OSD0_HE_SHIFT)
#define INT_CLR_F_OSD1_VS_MASK		(0x1 << INT_CLR_F_OSD1_VS_SHIFT)
#define INT_CLR_F_OSD1_HS_MASK		(0x1 << INT_CLR_F_OSD1_HS_SHIFT)
#define INT_CLR_F_OSD1_VE_MASK		(0x1 << INT_CLR_F_OSD1_VE_SHIFT)
#define INT_CLR_F_OSD1_HE_MASK		(0x1 << INT_CLR_F_OSD1_HE_SHIFT)
#define INT_CLR_F_TX_VS_MASK		(0x1 << INT_CLR_F_TX_VS_SHIFT)
#define INT_CLR_F_TX_HS_MASK		(0x1 << INT_CLR_F_TX_HS_SHIFT)
#define INT_CLR_F_TX_VE_MASK		(0x1 << INT_CLR_F_TX_VE_SHIFT)
#define INT_CLR_F_TX_HE_MASK		(0x1 << INT_CLR_F_TX_HE_SHIFT)

/*
 * Interrupt Status Register
 */
#define INT_STS_R_EDR_VS_SHIFT		(31)
#define INT_STS_R_EDR_HS_SHIFT		(30)
#define INT_STS_R_EDR_VE_SHIFT		(29)
#define INT_STS_R_EDR_HE_SHIFT		(28)
#define INT_STS_R_OSD0_VS_SHIFT		(27)
#define INT_STS_R_OSD0_HS_SHIFT		(26)
#define INT_STS_R_OSD0_VE_SHIFT		(25)
#define INT_STS_R_OSD0_HE_SHIFT		(24)
#define INT_STS_R_OSD1_VS_SHIFT		(23)
#define INT_STS_R_OSD1_HS_SHIFT		(22)
#define INT_STS_R_OSD1_VE_SHIFT		(21)
#define INT_STS_R_OSD1_HE_SHIFT		(20)
#define INT_STS_R_TX_VS_SHIFT		(19)
#define INT_STS_R_TX_HS_SHIFT		(18)
#define INT_STS_R_TX_VE_SHIFT		(17)
#define INT_STS_R_TX_HE_SHIFT		(16)
#define INT_STS_F_EDR_VS_SHIFT		(15)
#define INT_STS_F_EDR_HS_SHIFT		(14)
#define INT_STS_F_EDR_VE_SHIFT		(13)
#define INT_STS_F_EDR_HE_SHIFT		(12)
#define INT_STS_F_OSD0_VS_SHIFT		(11)
#define INT_STS_F_OSD0_HS_SHIFT		(10)
#define INT_STS_F_OSD0_VE_SHIFT		(9)
#define INT_STS_F_OSD0_HE_SHIFT		(8)
#define INT_STS_F_OSD1_VS_SHIFT		(7)
#define INT_STS_F_OSD1_HS_SHIFT		(6)
#define INT_STS_F_OSD1_VE_SHIFT		(5)
#define INT_STS_F_OSD1_HE_SHIFT		(4)
#define INT_STS_F_TX_VS_SHIFT		(3)
#define INT_STS_F_TX_HS_SHIFT		(2)
#define INT_STS_F_TX_VE_SHIFT		(1)
#define INT_STS_F_TX_HE_SHIFT		(0)

#define INT_STS_R_EDR_VS_MASK		(0x1 << INT_STS_R_EDR_VS_SHIFT)
#define INT_STS_R_EDR_HS_MASK		(0x1 << INT_STS_R_EDR_HS_SHIFT)
#define INT_STS_R_EDR_VE_MASK		(0x1 << INT_STS_R_EDR_VE_SHIFT)
#define INT_STS_R_EDR_HE_MASK		(0x1 << INT_STS_R_EDR_HE_SHIFT)
#define INT_STS_R_OSD0_VS_MASK		(0x1 << INT_STS_R_OSD0_VS_SHIFT)
#define INT_STS_R_OSD0_HS_MASK		(0x1 << INT_STS_R_OSD0_HS_SHIFT)
#define INT_STS_R_OSD0_VE_MASK		(0x1 << INT_STS_R_OSD0_VE_SHIFT)
#define INT_STS_R_OSD0_HE_MASK		(0x1 << INT_STS_R_OSD0_HE_SHIFT)
#define INT_STS_R_OSD1_VS_MASK		(0x1 << INT_STS_R_OSD1_VS_SHIFT)
#define INT_STS_R_OSD1_HS_MASK		(0x1 << INT_STS_R_OSD1_HS_SHIFT)
#define INT_STS_R_OSD1_VE_MASK		(0x1 << INT_STS_R_OSD1_VE_SHIFT)
#define INT_STS_R_OSD1_HE_MASK		(0x1 << INT_STS_R_OSD1_HE_SHIFT)
#define INT_STS_R_TX_VS_MASK		(0x1 << INT_STS_R_TX_VS_SHIFT)
#define INT_STS_R_TX_HS_MASK		(0x1 << INT_STS_R_TX_HS_SHIFT)
#define INT_STS_R_TX_VE_MASK		(0x1 << INT_STS_R_TX_VE_SHIFT)
#define INT_STS_R_TX_HE_MASK		(0x1 << INT_STS_R_TX_HE_SHIFT)
#define INT_STS_F_EDR_VS_MASK		(0x1 << INT_STS_F_EDR_VS_SHIFT)
#define INT_STS_F_EDR_HS_MASK		(0x1 << INT_STS_F_EDR_HS_SHIFT)
#define INT_STS_F_EDR_VE_MASK		(0x1 << INT_STS_F_EDR_VE_SHIFT)
#define INT_STS_F_EDR_HE_MASK		(0x1 << INT_STS_F_EDR_HE_SHIFT)
#define INT_STS_F_OSD0_VS_MASK		(0x1 << INT_STS_F_OSD0_VS_SHIFT)
#define INT_STS_F_OSD0_HS_MASK		(0x1 << INT_STS_F_OSD0_HS_SHIFT)
#define INT_STS_F_OSD0_VE_MASK		(0x1 << INT_STS_F_OSD0_VE_SHIFT)
#define INT_STS_F_OSD0_HE_MASK		(0x1 << INT_STS_F_OSD0_HE_SHIFT)
#define INT_STS_F_OSD1_VS_MASK		(0x1 << INT_STS_F_OSD1_VS_SHIFT)
#define INT_STS_F_OSD1_HS_MASK		(0x1 << INT_STS_F_OSD1_HS_SHIFT)
#define INT_STS_F_OSD1_VE_MASK		(0x1 << INT_STS_F_OSD1_VE_SHIFT)
#define INT_STS_F_OSD1_HE_MASK		(0x1 << INT_STS_F_OSD1_HE_SHIFT)
#define INT_STS_F_TX_VS_MASK		(0x1 << INT_STS_F_TX_VS_SHIFT)
#define INT_STS_F_TX_HS_MASK		(0x1 << INT_STS_F_TX_HS_SHIFT)
#define INT_STS_F_TX_VE_MASK		(0x1 << INT_STS_F_TX_VE_SHIFT)
#define INT_STS_F_TX_HE_MASK		(0x1 << INT_STS_F_TX_HE_SHIFT)

/*
 * RAW Stauts Register
 */
#define RAW_STS_F_EDR_VS_SHIFT		(15)
#define RAW_STS_F_EDR_HS_SHIFT		(14)
#define RAW_STS_F_EDR_VE_SHIFT		(13)
#define RAW_STS_F_EDR_HE_SHIFT		(12)
#define RAW_STS_F_OSD0_VS_SHIFT		(11)
#define RAW_STS_F_OSD0_HS_SHIFT		(10)
#define RAW_STS_F_OSD0_VE_SHIFT		(9)
#define RAW_STS_F_OSD0_HE_SHIFT		(8)
#define RAW_STS_F_OSD1_VS_SHIFT		(7)
#define RAW_STS_F_OSD1_HS_SHIFT		(6)
#define RAW_STS_F_OSD1_VE_SHIFT		(5)
#define RAW_STS_F_OSD1_HE_SHIFT		(4)
#define RAW_STS_F_TX_VS_SHIFT		(3)
#define RAW_STS_F_TX_HS_SHIFT		(2)
#define RAW_STS_F_TX_VE_SHIFT		(1)
#define RAW_STS_F_TX_HE_SHIFT		(0)

#define RAW_STS_F_EDR_VS_MASK		(0x1 << RAW_STS_F_EDR_VS_SHIFT)
#define RAW_STS_F_EDR_HS_MASK		(0x1 << RAW_STS_F_EDR_HS_SHIFT)
#define RAW_STS_F_EDR_VE_MASK		(0x1 << RAW_STS_F_EDR_VE_SHIFT)
#define RAW_STS_F_EDR_HE_MASK		(0x1 << RAW_STS_F_EDR_HE_SHIFT)
#define RAW_STS_F_OSD0_VS_MASK		(0x1 << RAW_STS_F_OSD0_VS_SHIFT)
#define RAW_STS_F_OSD0_HS_MASK		(0x1 << RAW_STS_F_OSD0_HS_SHIFT)
#define RAW_STS_F_OSD0_VE_MASK		(0x1 << RAW_STS_F_OSD0_VE_SHIFT)
#define RAW_STS_F_OSD0_HE_MASK		(0x1 << RAW_STS_F_OSD0_HE_SHIFT)
#define RAW_STS_F_OSD1_VS_MASK		(0x1 << RAW_STS_F_OSD1_VS_SHIFT)
#define RAW_STS_F_OSD1_HS_MASK		(0x1 << RAW_STS_F_OSD1_HS_SHIFT)
#define RAW_STS_F_OSD1_VE_MASK		(0x1 << RAW_STS_F_OSD1_VE_SHIFT)
#define RAW_STS_F_OSD1_HE_MASK		(0x1 << RAW_STS_F_OSD1_HE_SHIFT)
#define RAW_STS_F_TX_VS_MASK		(0x1 << RAW_STS_F_TX_VS_SHIFT)
#define RAW_STS_F_TX_HS_MASK		(0x1 << RAW_STS_F_TX_HS_SHIFT)
#define RAW_STS_F_TX_VE_MASK		(0x1 << RAW_STS_F_TX_VE_SHIFT)
#define RAW_STS_F_TX_HE_MASK		(0x1 << RAW_STS_F_TX_HE_SHIFT)
#endif

